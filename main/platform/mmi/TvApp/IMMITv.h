//-------------------------------------------------------------------------------------
//          Copyright ? 2009-2010 HXCOM                                             
//                All Rights Reserved.                                                 
//   The file is generated by Component Wizard for QUALCOMM Mobile Platform            
// FileName:   IMMITv.h                                                                      
// Author:     pengli                                                                      
// Date:       2006-10-20                                                                      
// Log:   Author             Date             Description                              
// ------------------------------------------------------------------------------------
//        pengli        2006-10-20       Generate source file frame                                
//-------------------------------------------------------------------------------------

#ifndef __IMMITV_H__
#define __IMMITV_H__

#include "AEE.h"
#include "AEEComdef.h"
#include "AEEInterface.h"
//#include "MMIMemory.h"
//#include "MMICommonMacro.h"
//#include "AEEBitmap.h"
#include "AEETv.h"
#include "MMITvParm.h"
#include "AEEMediaFormats.h"
//#include "ImageEdit_Common.h"
//#include "MMIFeatures.h" 

//////////////////////////////////////////////////////////////////////////
// Please define MMI_CLSID_IMMITv                                            
//////////////////////////////////////////////////////////////////////////

//#define MMICAMERA_MUTILCAMERAS_FEATURE
#define MMITV_SIZE_DC_COUNT 6 //for 8709 3M
#define MMITV_SIZE_DV_COUNT 1


#define MMITV_SIZE_DC_COUNT_FORMMS 2
#define MMITV_EFFECT_COUNT 4
#define MMITV_QUALITY_COUNT 3

#define IBASE_DEFINE_IPTR(Type, PtrName) \
  Type* PtrName = NULL 

#define IBASE_DECLARE_IPTR(Type, PtrName) \
  Type* PtrName

#define IBASE_INIT_IPTR(PtrName) \
  PtrName = NULL


#define IBASE_COPY_IPTR(pTarget, pSource)\
  do \
  { \
    if ((pSource) != NULL) \
    { \
      (void)IBASE_AddRef((IBase*)(pSource)); \
    } \
    if ((pTarget) != NULL) \
    { \
      (void)IBASE_Release((IBase*)(pTarget)); \
    } \
    (IBase*)(pTarget) = (IBase*)(pSource); \
  } while (FALSE)

  #define IBASE_RELEASE_IPTR(pI) \
  do \
  { \
    if (pI != NULL) \
    { \
      (void)IBASE_Release((IBase*)pI); \
      pI = NULL; \
    } \
  } while (FALSE)



typedef enum
{
	PREVIEW_MODE_DC,
	PREVIEW_MODE_DV
}T_PREVIEW_MODE;


typedef enum
{
	VIDEO_TYPE_3GP,
	VIDEO_TYPE_MP4
}T_VIDEO_TYPE;

typedef enum
{
	PICTURE_TYPE_JPEG,
	PICTURE_TYPE_PNG
}T_PICTURE_TYPE;

typedef enum
{
	PREVIEW_SIZE_320,
	PREVIEW_SIZE_640,
	PREVIEW_SIZE_1024,
	PREVIEW_SIZE_1280,
	PREVIEW_SIZE_1600,
	PREVIEW_SIZE_2048
}T_PREVIEW_SIZE;

typedef enum
{
	TV_QUALITY_HIGH,
	TV_QUALITY_MEDIUM,
	TV_QUALITY_LOW
}T_TV_QUALITY;

typedef enum
{
	MMITV_PreView,
	MMITV_SnapShot,
	MMITV_Record,
	MMITV_Abnormal
}MMITVEventType;

typedef enum
{
	MMITV_PreView_OnStart,
	MMITV_PreView_OnStartFail,
	MMITV_PreView_OnPaused,
	MMITV_PreView_OnResumed,
	MMITV_PreView_OnStoped,
	MMITV_PreView_Abort
}MMITVPreViewEvent;

typedef struct MMITVNotify
{
	MMITVEventType    nEventType;
	int16             	nEvent;
}MMITVNotify;



typedef struct MMIRecordTime
{
	int8   Hour;
	int8   Min;
	int8   Sec;
}MMIRecordTime;


typedef void (*PFNMMITVEVENT)(void * pUser, MMITVNotify * pNotify);

typedef void (*PFNVIDEOTIMEFEEDBACK)(void * pUser, MMIRecordTime * pTime);

typedef void (*PFNMMITVONPAINT)(void * pUser, IBitmap *pIFrameBitmap);


typedef struct 
{
	PFNMMITVEVENT       pfnOnEvent;
	PFNMMITVONPAINT     pfnOnPaint;
	PFNVIDEOTIMEFEEDBACK     pfnOnTimeFeedback;
	void*                    pUser;
}ICBMMITv;


typedef struct IMMITv IMMITv;


#define INHERIT_IMMITv(iname) \
        INHERIT_IQueryInterface(iname); \
        int  (*CreateTv) (iname* p##iname, ICBMMITv *pICBMMITv,uint32 region); \
        int  (*SetDisplaySize) (iname* p##iname, AEESize *pDisplaySize); \
        int  (*SetProperty) (iname* p##iname,TvProperty Property, TTvPropertyValue Value); \
        int  (*AutoScanTV) (iname* p##iname); \
        int  (*SetTvChannel)(iname* p##iname, uint16 Channel,boolean fast); \
        int  (*getTvChannel)(iname* p##iname);    \
        int  (*StartPreview)(iname* p##iname);    \
        int  (*updateimg)(iname* p##iname,uint32 dwParam);    \
        int  (*getChannelTotal)(iname* p##iname);    \
        int  (*StopPreview)(iname* p##iname);    \
        int  (*SetRegion)(iname* p##iname, TLG_REGION_CODE region); \
        uint8 (*getChannelCountAble)(iname* p##iname); \
        boolean (*hasChannelFinish)(iname* p##iname); \
        void (*ResetScanTag)(iname* p##iname); \
        uint16* (*getAbleChannelArray)(iname* p##iname); \
        int (*EnableVolPlay)(iname* p##iname,boolean  bVal);\
        int  (*getTF)(iname* p##iname);    \
        int  (*getTG)(iname* p##iname)    
     


AEEINTERFACE(IMMITv)
{
    INHERIT_IMMITv(IMMITv);
};

struct IMMITv
{
    const AEEVTBL(IMMITv) *pvt;
    void* pData;
};

#define IMMITv_AddRef(pThis)                             pThis->pvt->AddRef(pThis)
#define IMMITv_Release(pThis)                            pThis->pvt->Release(pThis)
#define IMMITv_QueryInterface(pThis,ClsID,ppInterface)   pThis->pvt->QueryInterface(pThis,ClsID,ppInterface)
#define IMMITv_CreateTv(pThis,pICBMMITv,region)    pThis->pvt->CreateTv(pThis,pICBMMITv,region)
#define IMMITv_SetDisplaySize(pThis,pDisplaySize)    pThis->pvt->SetDisplaySize(pThis,pDisplaySize)
//#define IMMITv_CancelCurJob(pThis)    pThis->pvt->CancelCurJob(pThis)
#define IMMITv_SetProperty(pThis,Property,Value)    pThis->pvt->SetProperty(pThis,Property,Value)
//#define IMMITv_GetCapturedFrame(pThis,ppIBitmap)    pThis->pvt->GetCapturedFrame(pThis,ppIBitmap)
//#define IMMITv_GetVideoFirstFrame(pThis,ppIBitmap)    pThis->pvt->GetVideoFirstFrame(pThis,ppIBitmap)
#define IMMITv_AutoScanTV(pThis)   pThis->pvt->AutoScanTV(pThis)
#define IMMITv_SetTvChannel(pThis, Channel,fast)  pThis->pvt->SetTvChannel(pThis, Channel,fast)
#define IMMITv_GetTvChannel(pThis)  pThis->pvt->getTvChannel(pThis)
#define IMMITv_StartPreview(pThis)  pThis->pvt->StartPreview(pThis)
#define IMMITv_updateimg(pThis,dw)  pThis->pvt->updateimg(pThis,dw)
#define IMMITv_getChannelTotal(pThis)  pThis->pvt->getChannelTotal(pThis)

#define IMMITv_StopPreview(pThis)   pThis->pvt->StopPreview(pThis)
//#define IMMITv_getChannelTotal(pThis)  pThis->pvt->getChannelTotal(pThis)
#define IMMITv_SetRegion(pThis, region) pThis->pvt->SetRegion(pThis, region) 
#define IMMITv_getChannelCountAble(pThis) pThis->pvt->getChannelCountAble(pThis)
#define IMMITv_hasChannelFinish(pThis) pThis->pvt->hasChannelFinish(pThis)
#define IMMITv_ResetScanTag(pThis) pThis->pvt->ResetScanTag(pThis)
#define IMMITv_getAbleChannelArray(pThis) pThis->pvt->getAbleChannelArray(pThis)
#define IMMITv_EnableVolPlay(pThis, bVal)  pThis->pvt->EnableVolPlay(pThis, bVal)

#define IMMITv_GetTF(pThis)  pThis->pvt->getTF(pThis)
#define IMMITv_GetTG(pThis)  pThis->pvt->getTG(pThis)
//#define IMMITv_GetCHRLOCK(pThis)  pThis->pvt->getCHRLOCK(pThis)

#endif


