#-------------------------------------------------------------------------------
# BOOT (boot code)
# $Header: //depot/asic/qsc1100/drivers/boot/boot.min#3 $
#-------------------------------------------------------------------------------

# This group should not be used in the combined OBJECTS list to avoid duplicate
# objs. Use BOOT_OBJS.  This is used to create the BOOT_OBJS and NORAM_OBJS
# compile group
BOOT_C_SOURCES=\
        bootdata.c \
        bootmem.c \
        boot_trap.c \
        armmmu.c \
        boothw.c \
        boot_mc.c \
        boot_trap_nzi.c \
        boothw_target.c \
        boot_dload.c \
        boot_hw_reset.c \
        boot_shared_seg_tail.c \
        boot_shared_seg.c \
        boot_crash_debug.c \
        GlobalData.c \
        GlobalIMEM.c

# Progressive boot is not used for this target at this time.
#       boot_shared_progressive_boot_block.c \


# This group should not be used in the combined OBJECTS list to avoid duplicate
# objs. Use BOOT_OBJS.  This is used to create the BOOT_OBJS compile group
BOOT_A_SOURCES=\
        bootapp.s \
        boot_data.s \
        boot_error_handler.s \
        boot_exception_handlers.s \
        boot_reset_handler.s \
        boot_target.s \
        boot_stacks.s \
        boot_vectors.s \
        pboot_pad_scl.s

ifeq ($(USES_L4),yes)
        BOOT_C_SOURCES := $(filter-out armmmu.c, $(BOOT_C_SOURCES))
        BOOT_C_SOURCES := $(filter-out boot_mc.c, $(BOOT_C_SOURCES))
        BOOT_C_SOURCES := $(filter-out boot_warmboot.c, $(BOOT_C_SOURCES))

        BOOT_C_SOURCES +=\
                cache_mmu_l4.c \
                boot_mc_l4.c

endif

BOOT_SOURCES=\
        $(BOOT_A_SOURCES) \
        $(BOOT_C_SOURCES)

BOOT_OBJS := $(addprefix $(TARGETDIR)/,$(BOOT_A_SOURCES:%.s=%.o) $(BOOT_C_SOURCES:%.c=%.o))

%/armmmu.o : CC := $(ARMCC)

vpath %.c $(BOOT)
vpath %.s $(BOOT)
