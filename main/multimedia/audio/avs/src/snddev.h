#ifndef SNDDEV_H
#define SNDDEV_H
/*===========================================================================

             S O U N D  D E V I C E   H E A D E R    F I L E

DESCRIPTION
  This header file contains all the definitions for the audio devices and the
  sound generation methods that are supported on this platform.
  This is version is based on constant ROM data, it may be replaced
  by a file-system based version.  This file could also be auto-generated by
  a PERL script or a windows-based calibration tool.


Copyright (c) 1999 - 2006 by QUALCOMM, Incorporated.  All Rights Reserved.
===========================================================================*/

/*===========================================================================

                      EDIT HISTORY FOR FILE

  This section contains comments describing changes made to this file.
  Notice that changes are listed in reverse chronological order.

  $Header: //source/qcom/qct/multimedia/audio/6k/ver1/avs/main/latest/src/snddev.h#8 $ $DateTime: 2009/11/11 07:40:48 $ $Author: kmodak $

when       who     what, where, why
--------   ---     ----------------------------------------------------------
11/11/09   knm     Added new sound devices for Bi-I2S
10/06/09   sj      Added SCMM specific changes
05/22/09   nr	   Added new SURF devices (CR#173500)
11/18/08   knm     Added Macro for HS-USB along with USB car kit
09/15/08   knm     Added support for Aux Line In(FM) volume control
03/15/06   ymc     Added FEATURE_INTERNAL_SADC support.
           ymc     Updated Copyright.
03/10/06    sm     Fixed a featurization issue with SDAC
12/02/05   act     Re-featurizing stereo-related codecs and sound devices.
09/18/05    sp     Added support for DSP based SBC encoder.
08/12/05    hz     Added featurization for USB HFK codecs.
07/26/05    sm     Added stereo USB support.
06/03/05    sg     Changed SNDDEV_DUMMY_DATA_UINT32_MAX to 0x7FFFFFFF since the
                   compiler optimizes 0xFFFFFFFF to -1.
05/27/05    sp     Added support for BT A2DP profile and ARM based SBC codec.
05/27/05    sg     Forced some enums to 32bit for L4 support.
05/24/05    hz     Added suppport for external SADC for MultiMedia Recording.
12/03/04    sm     Removed FEATURE_USB_ISOC_AUDIO
08/21/03    st     Added SND_DEVICE_BT_INTERCOM device.
           ymc     Updated copyright.  Removed PVCSPath.
07/24/03    sg     Added STEREO_HEADSET device.
10/29/02    st     Added SPEAKER_PHONE device.
10/04/01    sg     Added VCO and HCO modes for TTY.
10/01/01    sm     Added FEATURE_BT_AG_LOCAL_AUDIO.
04/26/01    sm     Added FEATURE_USB_ISOC_AUDIO support.
04/04/01    st     Modified code to support new FEATURE_MIDI_OUT feature.
02/28/01    st     Removed targetization.
09/08/00    st     Bluetooth support.
07/14/00   spf     Added TTY headset and HFK devices.
04/13/00    st     Added SND_DEVICE_SDAC and SND_METHOD_MIDI.
10/28/99   jkl     Added Analog HFK device.
09/09/99   jkl     Modified after code review.
08/17/99  ro/jkl   created file

===========================================================================*/

#include "comdef.h"     /* Definitions for byte, word, etc.     */
#include "target.h"     /* Target Specific Defintions           */

/* <EJECT> */
/*===========================================================================

                           DATA DECLARATIONS

===========================================================================*/

/* This definition is used to force enums to use 32 bits - required for L4 */
#define SNDDEV_DUMMY_DATA_UINT32_MAX 0x7FFFFFFF

/*  All of the audio devices supported on this platform
*/
typedef enum {
  SND_DEVICE_HANDSET,
  SND_DEVICE_HFK,
  SND_DEVICE_HEADSET,         /* Mono headset               */
#if defined(FEATURE_INTERNAL_SDAC) || defined(FEATURE_EXTERNAL_SDAC)
  SND_DEVICE_STEREO_HEADSET,  /* Stereo headset             */
#endif /* FEATURE_INTERNAL_SDAC || FEATURE_EXTERNAL_SDAC */
#ifdef FEATURE_ANALOG_HFK
  SND_DEVICE_AHFK,
#endif
#if defined(FEATURE_INTERNAL_SDAC) || defined(FEATURE_EXTERNAL_SDAC)
  SND_DEVICE_SDAC,
#endif /* FEATURE_INTERNAL_SDAC || FEATURE_EXTERNAL_SDAC */
#ifdef FEATURE_SPEAKER_PHONE
  SND_DEVICE_SPEAKER_PHONE,
#endif
#ifdef FEATURE_TTY
  SND_DEVICE_TTY_HFK,
  SND_DEVICE_TTY_HEADSET,
  SND_DEVICE_TTY_VCO,
  SND_DEVICE_TTY_HCO,
#endif
#ifdef FEATURE_BT
  SND_DEVICE_BT_INTERCOM,
#ifdef FEATURE_BT_AG
  SND_DEVICE_BT_HEADSET,
#ifdef FEATURE_BT_AG_LOCAL_AUDIO
#error code not present
#endif /* FEATURE_BT_AG_LOCAL_AUDIO */
#endif /* FEATURE_BT_AG */
#endif /* FEATURE_BT */
#if defined(FEATURE_USB_CARKIT) || defined(FEATURE_HS_USB_ANALOG_AUDIO)
  SND_DEVICE_USB,
#ifdef FEATURE_INTERNAL_SDAC
  SND_DEVICE_STEREO_USB,
#endif /* FEATURE_INTERNAL_SDAC */
#endif /* FEATURE_USB_CARKIT || FEATURE_HS_USB_ANALOG_AUDIO */
#if defined(FEATURE_INTERNAL_SADC) || defined(FEATURE_EXTERNAL_SADC)
  SND_DEVICE_IN_M_SADC_OUT_HANDSET, /* Input Mono   SADD, Output Handset */
  SND_DEVICE_IN_S_SADC_OUT_HANDSET, /* Input Stereo SADD, Output Headset */
  SND_DEVICE_IN_M_SADC_OUT_HEADSET, /* Input Mono   SADD, Output Handset */
  SND_DEVICE_IN_S_SADC_OUT_HEADSET, /* Input Stereo SADD, Output Headset */
#endif /* FEATURE_INTERNAL_SADC || FEATURE_EXTERNAL_SADC */
#ifdef FEATURE_BT
#if defined (FEATURE_SBC_CODEC) || defined (FEATURE_SBC_DSP_CODEC)
  SND_DEVICE_BT_A2DP_HEADSET,     /* A BT device supporting A2DP */
  SND_DEVICE_BT_A2DP_SCO_HEADSET, /* A BT headset supporting A2DP and SCO */
#endif /* FEATURE_SBC_CODEC */
#endif /* FEATURE_BT */
#ifdef FEATURE_FM_OEM
  SND_DEVICE_HEADSET_FM,
#endif
  SND_DEVICE_SURF_HANDSET,	/* To test on SURF */
  SND_DEVICE_SURF_HEADSET,	/* To test on SURF */
  SND_DEVICE_SURF_SPEAKER_PHONE,	/* To test on SURF */
  SND_DEVICE_BI_I2S,         /*Bidirectional I2S with all PP disabled*/
  SND_DEVICE_BI_I2S_TTY_FULL, /*Bidirectional I2S with all PP disabled*/
  SND_DEVICE_BI_I2S_TTY_VCO,  /*Bidirectional I2S with all PP disabled*/ 
  SND_DEVICE_BI_I2S_TTY_HCO,  /*Bidirectional I2S with all PP disabled*/
  SND_DEVICE_BI_I2S_HANDSET,  /*Handset on external codec using Bidirectional I2S */
  SND_DEVICE_BI_I2S_FLUENCE,  /*Fluence on external codec using Bidirectional I2S */
  SND_DEVICE_LP_FM_HANDSET,
  SND_DEVICE_MAX,
  SND_DEVICE_CURRENT,

  /* DO NOT USE: Force this enum to be a 32bit type */
  SND_DEVICE_32BIT_DUMMY = SNDDEV_DUMMY_DATA_UINT32_MAX
} snd_device_type;

/* The sound generation methods supported on this platform
*/
typedef enum {
  /* This method is required
  */
  SND_METHOD_VOICE = 0,   /* Use the device's voice generator                */

  /* Application-Specific Methods
  */
  SND_METHOD_KEY_BEEP,    /* Use the device's keybeep generator              */
  SND_METHOD_MESSAGE,     /* Use the path's ringer, or voice generator       */
  SND_METHOD_RING,        /* Use the device's ring generator                 */
#ifdef FEATURE_CLICK
#error code not present
#endif
#if defined(FEATURE_AUDIO_FORMAT) || defined(FEATURE_MIDI_OUT)
  SND_METHOD_MIDI,        /* Use the device's Midi generator                 */
#endif
  SND_METHOD_AUX,         /* Use the device's auxiliary generator if avail.  */
  SND_METHOD_AUX_LINE_IN, /* Use the device's Line in Audio                  */
  SND_METHOD_MAX,         /* Always last in the list                         */

  /* DO NOT USE: Force this enum to be a 32bit type */
  SND_METHOD_32BIT_DUMMY = SNDDEV_DUMMY_DATA_UINT32_MAX
} snd_method_type;

#endif /* SNDDEV_H */

