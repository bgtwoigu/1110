# *****************************************************************************
#
# PURPOSE:
#    Makefile script with compiler/assembler include header
#    search path information
#
# DESCRIPTION:
#    This file contains information about the optimal header search paths
#    for each sub-build
#
# SERVICES:
#    This file provides the following general services.
#        1. Setting exported include paths for use by sub-builds
#
# PRE-REQUISITES:
#    To utilize all the facilities provided by this file, certain special tools
#    and software programmes may be needed depending on the host system in use.
#        1. On UNIX    : GNU tools, normally available on most workstations.
#        2. On Windows : GNU tools for Windows, e.g., Cygnus, and Perl 5+.
#
#    Note also that every makefile script that is included - either directly or
#    indirectly - must be available and readable.
#
# Copyright (c) 2004-2008 by Qualcomm, Inc.  All Rights Reserved.
# *****************************************************************************
#============================================================================
#
#                        EDIT HISTORY FOR MODULE
#
# $Header: //depot/asic/msmshared/core_platform/build/qsc1100/core_incpaths.min#19 $ $DateTime: 2009/02/16 21:48:58 $ $Author: vkgupta $
#
# when       who     what, where, why
# --------   ---     --------------------------------------------------------
# 03/10/08   ngt     Initial Creation
#============================================================================

# Path to core ROOT from the directory where builds are invoked
#
COREPATH=/core/build/core_incpaths.min

UPDIRS:=.. ../.. ../../.. ../../../.. ../../../../.. ../../../../../.. ../../../../../../..
UPDIRS+=../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..
ROOT:=$(firstword $(wildcard $(addsuffix $(COREPATH), $(UPDIRS))))

ROOT:=$(subst $(COREPATH),,$(ROOT))
COREROOT=$(ROOT)/core

# Paths relative to ROOT for each subdir
#

#BOOT
QHSUSB=      $(COREROOT)/wiredconnectivity/qhsusb
QHSUSB_INC=      $(COREROOT)/wiredconnectivity/qhsusb/inc
QHSUSB_SRC_AL=      $(COREROOT)/wiredconnectivity/qhsusb/src/al
QHSUSB_SRC_DCD=      $(COREROOT)/wiredconnectivity/qhsusb/src/dcd
QHSUSB_SRC_DCI=      $(COREROOT)/wiredconnectivity/qhsusb/src/dci
QHSUSB_SRC_FUNC=      $(COREROOT)/wiredconnectivity/qhsusb/src/func
DLOAD=       $(COREROOT)/boot/dload/src
BINPATH=     $(ROOT)/build/ms/bin
BOOTROOT=    $(COREROOT)/boot
BOOT=        $(BOOTROOT)/amssboot/src
MIBIB=       $(BOOTROOT)/mibib
HEADERGEN=   $(ROOT)/tools/headergen
EFUSE=       $(BOOTROOT)/efuse/src
ROMBOOT =    $(BOOTROOT)/romboot
FSBL=        $(ROMBOOT)/fsbl
FSBL_SHARED= $(FSBL)/shared/src
FSBL_TARGET= $(FSBL)/target/src
DBL=         $(ROMBOOT)/dbl
DBL_SHARED=  $(DBL)/shared/src
DBL_TARGET=  $(DBL)/target/dbl/src/
OSBL=        $(ROMBOOT)/osbl
OSBL_SHARED= $(OSBL)/shared/src
OSBL_TARGET= $(OSBL)/target/src
PBL=         $(ROMBOOT)/pbl
BOOT_COMMON=                   $(ROMBOOT)/common
BOOT_COMMON_TARGET=            $(BOOT_COMMON)/target/src
BOOT_COMMON_SHARED=            $(BOOT_COMMON)/shared
BOOT_COMMON_SHARED_BOOT=       $(BOOT_COMMON_SHARED)/boot/src
BOOT_COMMON_SHARED_FLASH=      $(BOOT_COMMON_SHARED)/flash/src
BOOT_COMMON_SHARED_SEC=        $(BOOT_COMMON_SHARED)/sec/src
BOOT_COMMON_SHARED_ELF_LOADER= $(BOOT_COMMON_SHARED)/elf_loader/src
BOOT_COMMON_SHARED_OSBL=       $(BOOT_COMMON_SHARED)/osbl/src
BOOT_COMMON_SHARED_TOOLS=      $(BOOT_COMMON_SHARED)/tools/src

#BUSES
I2C=         $(COREROOT)/buses/i2c/src
ifeq ($(USES_SPI),yes)
SPI=         $(COREROOT)/buses/spi/source
SPI_INC=     $(COREROOT)/buses/spi/include
HALSPI_INC=  $(COREROOT)/buses/spi/source/1100
else
#a place holder
SPI=         $(COREROOT)
SPI_INC=     $(COREROOT)
HALSPI_INC=  $(COREROOT)
endif
PARB=        $(COREROOT)/buses/parb/src/
SBI=         $(COREROOT)/buses/sbi/src

#DEBUG AND TOOLS
ERR=         $(COREROOT)/debugtools/err/src
PROFDIAG=    $(COREROOT)/debugtools/profdiag/src
TASK=        $(COREROOT)/debugtools/task/src
TMC=         $(COREROOT)/debugtools/tmc/src

#HW ENGINES
ADC=         $(COREROOT)/hwengines/adc/src
THERM=       $(COREROOT)/hwengines/therm/src
DMOV=        $(COREROOT)/hwengines/dmov/src

#IO DEVICES
HS=          $(COREROOT)/iodevices/hs/src
KPD=         $(COREROOT)/iodevices/kpd/src

#KERNEL
REX=         $(COREROOT)/kernel/rex/src
RTE=         $(COREROOT)/kernel/rte/src

#POWER
SLEEP_SRC=   $(COREROOT)/power/sleep/src
SLEEP_INC=   $(COREROOT)/power/sleep/inc

#SECURE MSM
SME= $(COREROOT)/securemsm
SME_CRYPTO_INC= $(SME)/crypto/inc
SME_CRYPTO_SRC= $(SME)/crypto/src
SME_CHDLR= $(SME)/chdlr
SME_CHDLR_INC= $(SME_CHDLR)/chdlr/inc
SME_CHDLRCOM= $(SME)/chdlrcom
SME_CHDLRCOM_SRC= $(SME_CHDLRCOM)/chdlrcom/src
SME_DRMCOM= $(SME)/drmcom
SME_DRMCOM_DCF_INC= $(SME_DRMCOM)/drmcom_dcf/inc
SME_DRMCOM_DRM_SRC= $(SME_DRMCOM)/drmcom_drm/src
SME_SFS_INC= $(SME)/sfs/inc
SME_SFS_SRC= $(SME)/sfs/src
SME_SSL_INC= $(SME)/ssl/inc
SME_SSL_SRC= $(SME)/ssl/src
SME_SMETEST = $(SME)/smetest
SME_SMETEST_TEST_CRYPTO_SRC= $(SME_SMETEST)/test_crypto/src
SME_SMECOM_COM= $(SME)/smecom
SME_SMECOM_COM_INC= $(SME_SMECOM_COM)/com/inc
SME_SMECOM_COM_SRC= $(SME_SMECOM_COM)/com/src
SME_SMECOM_IXHTTP_INC= $(SME_SMECOM_COM)/ixhttp/inc
SME_SMECOM_IXHTTP_SRC= $(SME_SMECOM_COM)/ixhttp/src

#SERVICES
DIAG=        $(COREROOT)/services/diag/src
UTILS=       $(COREROOT)/services/utils/src
ANSIC=       $(COREROOT)/services/ansic/src
TIME=        $(COREROOT)/services/time/src
ifeq ($(USES_36_DIGIT_DIAL_STRING),yes)
NV=          $(COREROOT)/services/nv/jcdma_nv
NVIM=        $(COREROOT)/services/nv/jcdma_nv
else
NV=          $(COREROOT)/services/nv
NVIM=        $(COREROOT)/services/nv
endif

#STORAGE
FLASH=       $(COREROOT)/storage/flash/src
SDCC=        $(COREROOT)/storage/sdcc/src
HFAT=        $(COREROOT)/storage/hfat/src
HFAT_INC=    $(COREROOT)/storage/hfat/inc
EFS=         $(COREROOT)/storage/efs/src
EFS_INC=     $(COREROOT)/storage/efs/inc
FS=          $(COREROOT)/storage/efs1_compat/src
FS_INC=      $(COREROOT)/storage/efs1_compat/inc
FDI=         $(COREROOT)/storage/fdi/src

#SYSTEM DRIVERS
BIO=         $(COREROOT)/systemdrivers/bio/src
HW=          $(COREROOT)/systemdrivers/hw/src
TRAMP=       $(COREROOT)/systemdrivers/tramp/src
CLK=         $(COREROOT)/systemdrivers/clk/src
CLKREGIM=    $(COREROOT)/systemdrivers/clkregim/src
TLMM=        $(COREROOT)/systemdrivers/tlmm/src

#WIRED_CONNECTIVITY
HSU=         $(COREROOT)/wiredconnectivity/hsusb
HSU_DRIVER_INC=     $(HSU)/driver/inc
HSU_DRIVER_SRC=     $(HSU)/driver/src
HSU_CORE_INC= $(HSU)/core/inc
HSU_CLASSES_INC= $(HSU)/classes/inc
HSU_CORE_SRC= $(HSU)/core/src
HSU_CLASSES_SRC= $(HSU)/classes/src 
HSU_USB_INC_PATHS = \
   $(HSU_DRIVER_INC) \
   $(HSU_CORE_INC) \
   $(HSU_CLASSES_INC) \
   $(QHSUSB_INC) \
   $(QHSUSB_SRC_AL) \
   $(QHSUSB_SRC_DCD) \
   $(QHSUSB_SRC_DCI) \
   $(QHSUSB_SRC_FUNC)

RDEVMAP=     $(COREROOT)/wiredconnectivity/rdevmap/src
SIO=         $(COREROOT)/wiredconnectivity/sio/src
UART=        $(COREROOT)/wiredconnectivity/uart/src

#libstd
LIBSTD=      $(COREROOT)/cs/libstd
LIBSTDINC=   $(COREROOT)/cs/libstd/inc
ifeq ($(USES_STACKCHK),yes)
LIBSTDLIB=   $(COREROOT)/cs/libstd/lib/ADS12arm9swst_Release
else
LIBSTDLIB=   $(COREROOT)/cs/libstd/lib/ADS12arm9_Release# # DEFAULT
endif
ifeq ($(findstring RVCT21,$(ARMTOOLS)),RVCT21)
LIBSTDLIB=   $(COREROOT)/cs/libstd/lib/RVCT21arm9_Release# # RVCT2.1
endif
ifeq ($(findstring RVCT22,$(ARMTOOLS)),RVCT22)
LIBSTDLIB=   $(COREROOT)/cs/libstd/lib/RVCT22arm9_Release# # RVCT2.2
endif

# FOR Flash Tools
MJNAND =     $(ROOT)/tools/mjnand
MJFLASH=     $(ROOT)/tools/mjflash
JFLASH =     $(ROOT)/tools/jflash
HOSTDL =     $(ROOT)/tools/hostdl

CORE_PATHS=\
        $(ADC) $(SBI) $(BOOT) $(BIO) $(ANSIC) $(CLK) $(CLKREGIM) $(DIAG) $(DLOAD) \
        $(DMOV) $(DRVLIB) $(EFS_INC) $(FDI) $(EFUSE) $(FLASH) $(FS_INC) $(HS) $(HW) $(I2C) $(SPI) $(SPI_INC) $(HALSPI_INC) $(KPD) \
        $(LIBSTDINC) $(MIBIB) $(NV) $(NVIM) $(PBL) $(PARB) $(BOOT_COMMON_SHARED_BOOT) \
        $(SDCC) $(HFAT_INC) $(SIO) $(RDEVMAP) $(UART) $(TASK) $(THERM) $(TLMM) \
        $(TMC) $(TRAMP) $(SLEEP_INC) \
        $(HSU_USB_INC_PATHS) $(UTILS) $(SME_CRYPTO_INC) \
        $(SME_CRYPTO_SRC) $(SME_SFS_INC) $(SME_SFS_SRC) $(SME_SSL_INC) \
        $(SME_SSL_SRC) $(SME_SMETEST_TEST_CRYPTO_SRC) $(SME_SMECOM_COM_INC) \
        $(SME_SMECOM_COM_SRC) $(SME_SMECOM_IXHTTP_INC) $(SME_SMECOM_IXHTTP_SRC) \
        $(SME_DRMCOM_DRM_SRC) $(SME_CHDLR_INC) $(SME_CHDLRCOM_SRC) \
        $(SME_DRMCOM_DCF_INC) $(TIME) $(RTE) $(ERR) $(PROFDIAG) $(REX)
