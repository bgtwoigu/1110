#ifndef AEEBTAGEXT_IDL
#define AEEBTAGEXT_IDL
//qidl location=top
/*%*============================================================================
   @FILE:         AEEIBTAGEx.h

   Interface for Bluetooth Audio Gateway extension.

===============================================================================
        Copyright (c)  2009 QUALCOMM Incorporated.
               All Rights Reserved.
            QUALCOMM Proprietary and Confidential 
=============================================================================*/
#include "AEEISignal.idl"
#include "AEEBTDef.idl"

/**
 * Interface ID
 */
const AEEIID AEEIID_IBTAGEx = 0x01090dc7;

/**
 * @interface IBTAGEx
 */
interface IBTAGEx : IQI
{
   AEEResult OnATCommand(in ISignal piSig);
   AEEResult GetATCommand(rout string atCmd);
   AEEResult SendResponse(in string pszResponse);

   AEEResult GetRemoteMicrophoneLevel(in BDAddress pBDAddr, rout uint8 pLevel);
   AEEResult SetRemoteMicrophoneLevel(in BDAddress pBDAddr, in uint8 level);

   AEEResult SetMOSUsage(in boolean bUse);
};

//qidl location=bottom
/*%*============================================================================
    INTERFACES DOCUMENTATION
===============================================================================

IBTAGEx Interface
Description:

   This private interface defines APIs that complement IBTAudioGateway.
   
Interface ID:
   AEEIID_IBTAGEx

See Also:
   IBTAudioGateway

==============================================================================
==============================================================================
   METHOD DOCUMENTATION
==============================================================================

IBTAGEx_AddRef()

Description:
   Inherited from IQI_AddRef().

See Also:
   IBTAGEx_Release()

==============================================================================
IBTAGEx_Release()

Description:
   Inherited from IQI_Release().

See Also:
   IBTAGEx_AddRef()
   
==============================================================================
IBTAGEx_QueryInterface()

Description:
   Inherited from IQI_QueryInterface().

===============================================================================
IBTAGEx_OnATCommand

Description:
   Registers/unregisters a signal with the interface to be set when an 
   AT command sent by remote device is not handled by lower implementation.

   Once this signal is set, the AT command must be retrieved by calling 
   IBTAGEx_GetATCommand().

   To unregister, application should pass NULL in place of piSig.

Prototype:
   AEEResult IBTAGEx_OnATCommand(IBTAGEx* pMe, ISignal*  piSig);

Parameters:
   pMe [i]     : the object
   piSig [i]   : Signal to be set when an event occurs.

Return Values:
   AEE_SUCCESS : The signal handler was successfully registered.

See Also:
   IBTAGEx_GetATCommand

===============================================================================
IBTAGEx_GetATCommand

Description:
   Retrieves the next unprocessed AT command.

Prototype:
   AEEResult IBTAGEx_GetATCommand(
                IBTAGEx* pMe, 
                char*    pszATCmd, 
                int      nATCmdLen,
                int*     pnATCmdLenReq);

Parameters:
   pMe [i]           : the object
   pszATCmd [o]      : destination for AT command string
   nATCmdLen [i]     : number of characters destination buffer can hold
   pnATCmdLenReq [o] : number of characters destination buffer must be able to hold

Return Values:
   AEE_SUCCESS          : AT command is successfully retrieved
   AEE_EBADPARM         : invalid input parameters
   AEE_EBADSTATE        : no AT commands to retrieve
   AEE_EBUFFERTOOSMALL  : no partial data copied, 
                          available data size returned in atCmdLenReq

Comments:
   There may be more than one AT command available to be retrieved.
   All data must be retrieved at once.  If destination buffer is not large
   enough to hold all data, no partial data would be copied and
   AEE_EBUFFERTOOSMALL is returned.

See Also:
   IBTAGEx_OnATCommand

===============================================================================
IBTAGEx_SendResponse

Description:
   Responds to the last received AT command.

Prototype:
   AEEResult IBTAGEx_SendResponse(
                IBTAGEx*       pMe, 
                const char*      pszRsp);

Parameters:
   pMe [i]        : the object
   pszRsp [i]     : response to the received AT command

Return Values:
   AEE_SUCCESS    : the response is on its way to remote device
   AEE_EBADPARM   : invalid input parameters
   AEE_EBADSTATE  : no response is expected

See Also:
   IBTAGEx_OnATCommand
   IBTAGEx_GetATCommand

===============================================================================
IBTAGEx_GetRemoteMicrophoneLevel

Description:
   Retrieves the current microphone gain level from remote device.

Prototype:
   AEEResult IBTAGEx_GetRemoteMicrophoneLevel(
                IBTAGEx*         pMe, 
                const BDAddress* pBDAddr, 
                uint8*           pLevel);

Parameters:
   pMe [i]        : the object
   pBDAddr [i]    : remote device's address
   pLevel [o]     : destination for microphone gain level

Return Values:
   AEE_SUCCESS    : microphone gain level successfully retrieved
   AEE_EBADPARM   : invalid input parameters
   AEE_EBADSTATE  : not connected to remote device

See Also:
   IBTAGEx_SetRemoteMicrophoneLevel

===============================================================================
IBTAGEx_GetRemoteMicrophoneLevel

Description:
   Sets the microphone gain level in remote device.

Prototype:
   AEEResult IBTAGEx_SetRemoteMicrophoneLevel(
                IBTAGEx*         pMe, 
                const BDAddress* pBDAddr, 
                uint8            level);

Parameters:
   pMe [i]        : the object
   pBDAddr [i]    : remote device's address
   level [i]      : the new microphone gain level

Return Values:
   AEE_SUCCESS    : the new microphone gain level is on its way to remote device
   AEE_EBADPARM   : invalid input parameters
   AEE_EBADSTATE  : not connected to remote device

Comments:
   Per Bluetooth specifications, volume level ranges from 0 to 15.

See Also:
   IBTAGEx_SetRemoteMicrophoneLevel

===============================================================================
IBTAGEx_SetMOSUsage

Description:
   Enables/disables Media-over-SCO.

Prototype:
   AEEResult IBTAGEx_SetMOSUsage(IBTAGEx* pMe, boolean bUse);

Parameters:
   pMe [i]      : the object
   bUse [i]     : TRUE to enable MOS; FALSE to disable

Return Values:
   always AEE_SUCCESS

==============================================================================*/

#endif // AEEBTAGEXT_IDL
