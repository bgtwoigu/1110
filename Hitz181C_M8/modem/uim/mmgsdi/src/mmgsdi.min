#-------------------------------------------------------------------------------
# MMGSDI
#-------------------------------------------------------------------------------
MMGSDI_SOURCES=\
	gsdi.c \
	gsdi_nv.c \
	gsdicdma.c \
	gsdigsm.c \
	gsdilib.c \
	gsdiuim.c \
	gsdiusim.c \
	gsdiutil.c \
	gsdi_chnl_mgt.c \
	gsdidiag.c \
	gsdi_perso.c \
	gsdi_efs.c \
	gsdi_cphs.c \
	gsdi_perso_engine.c \
	gsdi_perso_engine_ruim.c \
	gsdi_perso_sec.c \
	mmgsdi_icc.c \
	mmgsdi_cnf.c \
	mmgsdilib.c \
	mmgsdi_sap.c \
	mmgsdi_sap_rsp.c \
	mmgsdi_gen.c \
	mmgsdi_gen_rsp.c \
	mmgsdi_uicc.c \
	mmgsdi_uim_uicc.c \
	mmgsdi_uim_icc.c \
	mmgsdi_icc_rsp.c \
	mmgsdi_uicc_rsp.c \
	mmgsdibt.c \
	mmgsdiutil.c \
	mmgsdi.c \
	mmgsdi_session.c \
	gsdidiag_uim.c \
	virtuim.c \
	mmgsdi_recover.c \
	mmgsdi_ruim_jcdma.c \
	mmgsdi_mflo.c \
	mmgsdi_refresh.c \
	mmgsdi_refresh_rsp.c \
	gsdi_convert.c \
	gsdidiag_gstk.c 

MMGSDI_OBJS :=  $(addprefix $(TARGETDIR)/, $(MMGSDI_SOURCES:%.c=%.o))
vpath %.c $(MMGSDI_SRC)

ifeq ($(BIG),yes)
        MMGSDI_OBJS := $(TARGETDIR)/mmgsdi.lib
else
        MMGSDI_OBJS :=  $(addprefix $(TARGETDIR)/, $(MMGSDI_SOURCES:%.c=%.o))
endif

$(TARGETDIR)/mmgsdi.lib : $(MMGSDI_SOURCES)
	$(group_c_compile)

#============================================================================
# Support for exporting the GSDI API from modem to apps
#============================================================================
ifeq ($(USES_EXPORT_GSDI),yes)
  GSDI_CLIENT_SOURCES = \
	gsdi_exp_clnt.c \
	gsdi_exp_xdr.c

  GSDI_SERVER_SOURCES = \
	gsdi_exp_svc.c \
	gsdi_exp_xdr.c
    
  GSDI_CLIENT_OBJS := $(addprefix $(TARGETDIR)/, $(GSDI_CLIENT_SOURCES:%.c=%.o))
  GSDI_SERVER_OBJS := $(addprefix $(TARGETDIR)/, $(GSDI_SERVER_SOURCES:%.c=%.o))

  vpath %.h $(MMGSDI_INC)
  vpath %.c $(MMGSDI_SRC)/rpc

  ifneq ($(REMOTE_API_LOC_KNOWN),yes)
    htorpc_gsdi_exp : REMOTE_API_LOC = $(MMGSDI_SRC)/rpc
    htorpc_mmgsdi_exp : ; @$(MAKE_AGAIN)
		    @cp -f -u $(MMGSDI_SRC)/rpc/gsdi_exp_rpc.h $(MMGSDI_INC)/gsdi_exp_rpc.h
  endif

  HTORPC_DEPS += gsdi_exp
  HTORPC_gsdi_exp_ARGS = -a gsdi_exp
endif

#============================================================================
# Support for exporting the MMGSDILIB API from modem to apps
#============================================================================
ifeq ($(USES_EXPORT_MMGSDILIB),yes)
  MMGSDILIB_CLIENT_SOURCES = \
	mmgsdilib_clnt.c \
	mmgsdilib_xdr.c

  MMGSDILIB_SERVER_SOURCES = \
	mmgsdilib_svc.c \
	mmgsdilib_xdr.c
    
  MMGSDILIB_CLIENT_OBJS := $(addprefix $(TARGETDIR)/, $(MMGSDILIB_CLIENT_SOURCES:%.c=%.o))
  MMGSDILIB_SERVER_OBJS := $(addprefix $(TARGETDIR)/, $(MMGSDILIB_SERVER_SOURCES:%.c=%.o))

  vpath %.h $(MMGSDI_INC)
  vpath %.c $(MMGSDI_SRC)/rpc

  ifneq ($(REMOTE_API_LOC_KNOWN),yes)
    htorpc_mmgsdilib : REMOTE_API_LOC = $(MMGSDI_SRC)/rpc
    htorpc_mmgsdilib : ; @$(MAKE_AGAIN)
		    @cp -f -u $(MMGSDI_SRC)/rpc/mmgsdilib_rpc.h $(MMGSDI_INC)/mmgsdilib_rpc.h
  endif

  HTORPC_DEPS += mmgsdilib
  HTORPC_mmgsdilib_ARGS = -a mmgsdilib
endif

### Start Lint block ###
ifeq ($(DO_LINT),yes)

MMGSDI_LINT_OBJS := $(addprefix $(LINTDIR)/, $(MMGSDI_SOURCES:%.c=%.lint))

# Specify group target for linting MMGSDI unit
$(LINTDIR)/mmgsdi_lint : $(MMGSDI_LINT_OBJS)

endif
### End Lint block ###
