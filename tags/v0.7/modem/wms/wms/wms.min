#-------------------------------------------------------------------------------
# WMS (wireless messaging services)
# Copyright (c) 1998,1999,2000,2001,2002,2003,2004,2005,2006,2007
# by QUALCOMM, Incorporated.  All Rights Reserved
#-------------------------------------------------------------------------------

WMSLIBDIR = $(WMS)/lib/$(LIB_VARIANT)

##############################################################
# All Source Files
##############################################################

CMCNAS_DIR = $(WMS)/src/CMCNas
ALL_INCLUDES += -I $(CMCNAS_DIR)/inc

vpath %.c $(WMS)/src/WMSE
WMSE_SOURCES= wms.c \
              wmsbc.c \
              wmscfg.c \
              wmscl.c \
              wmscm.c \
              wmscm_gw.c \
              wmsdbg.c \
              wmsdc.c \
              wmsdiag.c \
              wmsmsg.c \
              wmsnv.c \
              wmsruim.c \
              wmssim.c \
              wmsts.c \
              wmstscdma.c \
              wms_iwmsc.c \
              wmsdem.c \
              wmstsi.c

WMS_TS_SOURCES=\
             wmsts.c \
             wmstscdma.c 

WMS_SOURCES = $(WMSE_SOURCES) 

vpath %.c $(WMS)/src/CMCNas/src
CMCNAS_SOURCES = CMCNas_MN.c

WMS_SOURCES += $(CMCNAS_SOURCES) 

ifeq ($(USES_OEMSMS),yes)
   vpath %.c $(WMS)/src/MsgStore/src
   ALL_INCLUDES += -I $(WMS)/src/MsgStore/inc -I $(WMS)/src/BREWSMS/inc
   ALL_INCLUDES += -I $(BREW_DIR)/imports/settings/inc 
   ALL_INCLUDES += -I $(BREW_DIR)/imports/settings/inc/bid
   APPFLAGS += -D AEE_STATIC
   OEMSMS_SOURCES = OEMSMSMsg.c MsgStore.c
   WMSLIBS += $(WMSLIBDIR)/aeesms.lib $(WMSLIBDIR)/brewsms.lib
   # Add to Build_CIFS to eliminate StaticMod List Change
   $(BUILD)_CIFS += $(WMSLIBDIR)/aeesms.clif $(WMS)/src/MsgStore/src/MsgStore.cif
endif

### Enable WMS Components build
ifeq ($(USES_IWMSC),yes)

   CIFC_EXE = $(APIONE_DIR)/bin/cifc.exe
   WMSS_DIR = $(WMS)/src/WMSS
   vpath %.c $(WMSS_DIR)/src
   WMSS_SOURCES = CMC.c \
                  WMSS_CIFS.c \
                  WMSC_CIFS.c \

   WMS_SOURCES += $(WMSS_SOURCES)
   ALL_INCLUDES += -I $(WMSS_DIR)/inc -I $(WMS)/src/WMSE
   CFLAGS += -D FEATURE_IWMSC

   WMSLIBS += $(WMSLIBDIR)/WMSC.lib $(WMSLIBDIR)/WMSCCodec.lib $(WMSLIBDIR)/WMSCUtil.lib
   WMS_CIF_INCFLAGS = -I $(APIONE_DIR)/inc \
                      -I $(APIONE_DIR)/inc/OEM \
                      -I $(WMSS_DIR)/src \
                      -I $(WMSS_DIR)/inc

##############################################################
# Generate CIF source files
##############################################################
$(TARGETDIR)/WMSC_CIFS.c: $(WMSLIBDIR)/WMSC.clif
	$(CIFC_EXE) -mod WMSC -s -src $@ $<

$(TARGETDIR)/WMSS_CIFS.c: $(WMSS_DIR)/src/CMCCDMA.cif $(WMSS_DIR)/src/CMCGW.cif
	@echo $(CIFC_EXE) -pre $(TARGETDIR)/WMSS.clif $(WMS_CIF_INCFLAGS) $<
	$(CIFC_EXE) -pre $(TARGETDIR)/CMCCDMA.clif $(WMS_CIF_INCFLAGS) $(WMSS_DIR)/src/CMCCDMA.cif
	$(CIFC_EXE) -pre $(TARGETDIR)/CMCGW.clif $(WMS_CIF_INCFLAGS) $(WMSS_DIR)/src/CMCGW.cif
	$(CIFC_EXE) -mod WMSS -s -src $@ $(TARGETDIR)/CMCCDMA.clif $(TARGETDIR)/CMCGW.clif

# Add to Build_CIFS to eliminate StaticMod List Change
$(BUILD)_CIFS += $(TARGETDIR)/CMCCDMA.clif $(TARGETDIR)/CMCGW.clif $(WMSLIBDIR)/WMSC.clif

endif


### Enable WMS Components build for GW
ifeq ($(USES_IWMSC_GW),yes)
   CFLAGS += -D FEATURE_IWMSC_GW
endif

WMS_OBJS =  $(addprefix $(TARGETDIR)/, $(WMS_SOURCES:%.c=%.o))
WMS_TS_OBJS :=  $(addprefix $(TARGETDIR)/, $(WMS_TS_SOURCES:%.c=%.o))
OEMSMS_OBJS :=  $(addprefix $(TARGETDIR)/, $(OEMSMS_SOURCES:%.c=%.o))

ifeq ($(USES_IWMSC),yes)
$(WMS_OBJS): ALL_PATHS := $(COMPONENTSERVICES) $(ALL_PATHS)
$(OEMSMS_OBJS): ALL_PATHS := $(COMPONENTSERVICES) $(ALL_PATHS)
endif

########################
### Start Lint block ###
########################
ifdef DO_LINT
   WMS_LINT_OBJS := $(WMS_LINT_OBJS) $(addprefix $(LINTDIR)/, $(WMS_SOURCES:%.c=%.lint))
   # Specify group target for linting WMS subsystem
   $(LINTDIR)/wms_lint : $(WMS_LINT_OBJS)
endif
### End Lint block ###


#============================================================================
# Support for exporting WMS routines from modem to apps
#============================================================================

ifeq ($(USES_EXPORT_WMS),yes)
  WMS_CLIENT_SOURCES = \
    wms_clnt.c \
    wms_xdr.c

  WMS_SERVER_SOURCES = \
    wms_svc.c \
    wms_xdr.c

  WMS_CLIENT_OBJS := $(addprefix $(TARGETDIR)/, $(WMS_CLIENT_SOURCES:%.c=%.o))
  WMS_SERVER_OBJS := $(addprefix $(TARGETDIR)/, $(WMS_SERVER_SOURCES:%.c=%.o))

  HTORPC_wms_ARGS = -a wms
  HTORPC_DEPS    += wms

  ifneq ($(REMOTE_API_LOC_KNOWN),yes)
    htorpc_wms : REMOTE_API_LOC = $(WMS)/src/WMSE_Remoted 
    htorpc_wms : ; @$(MAKE_AGAIN)
	@cp -f -u $(WMS)/src/WMSE_Remoted/wms_rpc.h $(WMS)/inc/wms_rpc.h
  endif

  vpath %.h $(WMS)/inc
  vpath %.c $(WMS)/src/WMSE_Remoted
endif

#============================================================================
# Support for exporting WMSPM routines from modem to apps
#============================================================================

ifeq ($(USES_EXPORT_WMSPM),yes)
  WMSPM_CLIENT_SOURCES = \
    wmspm_clnt.c \
    wmspm_xdr.c

  WMSPM_SERVER_SOURCES = \
    wmspm_svc.c \
    wmspm_xdr.c

  WMSPM_CLIENT_OBJS := $(addprefix $(TARGETDIR)/, $(WMSPM_CLIENT_SOURCES:%.c=%.o))
  WMSPM_SERVER_OBJS := $(addprefix $(TARGETDIR)/, $(WMSPM_SERVER_SOURCES:%.c=%.o))

  HTORPC_wmspm_ARGS = -a wmspm
  HTORPC_DEPS    += wmspm

  ifneq ($(REMOTE_API_LOC_KNOWN),yes)
    htorpc_wmspm : REMOTE_API_LOC = $(WMS)/src/WMSE_Remoted 
    htorpc_wmspm : ; @$(MAKE_AGAIN)
	@cp -f -u $(WMS)/src/WMSE_Remoted/wmspm_rpc.h $(WMS)/inc/wmspm_rpc.h
  endif

  vpath %.h $(WMS)/inc
  vpath %.c $(WMS)/src/WMSE_Remoted
endif

