#-------------------------------------------------------------------------------
# UIMDRV
#-------------------------------------------------------------------------------
RUIM_SOURCES=\
	uim.c \
	uimgen.c \
	uimcdma.c \
	uimgsm.c \
	uimdrv.c \
	uimgnusr.c \
	uimtk.c \
	uimt1.c \
	uimutil.c \
	uimmflo.c \
	uimusb.c

RUIM_GSM_SOURCES=\
	uimusim.c \
	uimisim.c

vpath %.c $(UIMDRV_SRC)

RUIM_GSM_OBJS := $(addprefix $(TARGETDIR)/, $(RUIM_GSM_SOURCES:%.c=%.o))
RUIM_GSM_DEPS := $(addprefix $(TARGETDIR)/, $(RUIM_GSM_SOURCES:%.c=%.dep))

ifeq ($(BIG),yes)
  RUIM_OBJS := $(TARGETDIR)/ruim.lib
else
  RUIM_OBJS := $(addprefix $(TARGETDIR)/, $(RUIM_SOURCES:%.c=%.o))
endif

$(TARGETDIR)/ruim.lib : $(RUIM_SOURCES)
	$(group_c_compile)

#============================================================================
# Support for exporting the UIM API from modem to apps
#============================================================================
ifeq ($(USES_EXPORT_UIM),yes)
  UIM_CLIENT_SOURCES = \
	uim_clnt.c \
	uim_xdr.c

  UIM_SERVER_SOURCES = \
	uim_svc.c \
	uim_xdr.c
    
  UIM_CLIENT_OBJS := $(addprefix $(TARGETDIR)/, $(UIM_CLIENT_SOURCES:%.c=%.o))
  UIM_SERVER_OBJS := $(addprefix $(TARGETDIR)/, $(UIM_SERVER_SOURCES:%.c=%.o))

  vpath %.h $(UIMDRV_INC)
  vpath %.c $(UIMDRV_SRC)/rpc

  ifneq ($(REMOTE_API_LOC_KNOWN),yes)
    htorpc_uim : REMOTE_API_LOC = $(UIMDRV_SRC)/rpc
    htorpc_uim : ; @$(MAKE_AGAIN)
		    @cp -f -u $(UIMDRV_SRC)/rpc/uim_rpc.h $(UIMDRV_INC)/uim_rpc.h
  endif

  HTORPC_DEPS += uim
  HTORPC_uim_ARGS = -a uim
endif

### Start Lint block ###
ifeq ($(DO_LINT),yes)

RUIM_LINT_OBJS := $(addprefix $(LINTDIR)/, $(RUIM_SOURCES:%.c=%.lint))

# Specify group target for linting UIMDRV unit
$(LINTDIR)/uim_lint : $(RUIM_LINT_OBJS)

endif
### End Lint block ###
