#====================================================
#  Name:
#    FSBL_OBJS.MIN
#
#  Description:
#    An includable component of the makefile to build the FSBL software.
#
#    This file specifies the objects that belong to the various groups that
#    make up the targets
#
# Copyright (c) 2008  by QUALCOMM, Incorporated.  All Rights Reserved.
#----------------------------------------------------------------------------
#============================================================================
#
#                        EDIT HISTORY FOR MODULE
#
# $Header: //depot/asic/qsc1100/romboot/sbl/fsbl/fsbl_objs.min#7 $
#
# when       who     what, where, why
# -------    ---     --------------------------------------------------------
# 01/14/08   MJS     Initial version.
#============================================================================

#===============================================================================
#                         MODULE OBJECT FILE LISTS
#===============================================================================
# The objects are grouped by the module C or ASM in which they reside.  This 
# allows selectively controlling compile flags and for easier creation of 
# different combinations of modules to get the entire object list. 
# They are listed alphabetically by name.

# Note: Each object file should appear exactly once in this file!
#-------------------------------------------------------------------------------
# FSBL (Fail Safe Boot Loader)
#-------------------------------------------------------------------------------
# This group should not be used in the combined OBJECTS list to avoid duplicate
# objs. 
# compile group

#############################
# Boot downloader sources.....
# DLOAD_OBJS
# CLKREGIM_OBJS
# UTILS_OBJS
# HW_DLOAD_OBJS
# BIO_OBJS
# EFUSE_OBJS
# 
#############################
ifeq ($(FSBL_ENABLED_DLOAD),TRUE)
include $(DLOAD)/oemsbl_dload.min
include $(CLKREGIM)/oemsbl_clkregim.min
include $(UTILS)/oemsbl_services_utils.min
include $(BIO)/oemsbl_drivers_bio.min
include $(EFUSE)/oemsbl_drivers_efuse.min
include $(HW)/oemsbl_drivers_hw.min

DLOAD_ADDITIONAL_C_SOURCES=hw_crash_debug.c \
                           boot_shared_seg_tail.c \
                           boot_shared_seg.c \
                           boot_crash_debug.c \
                           boot_sbi_init.c \
                           boothw.c \
                           fsbl_dload_stubs.c \
                           fsbl_pm_stubs.c

DLOAD_ADD_OBJS :=  $(addprefix $(TARGETDIR)/, $(DLOAD_ADDITIONAL_C_SOURCES:%.c=%.o)) \
                     $(TARGETDIR)/boot_target.o
#                     $(TARGETDIR)/boot_error_handler.o

ifeq ($(USES_HSU),yes)
  include $(HSU)/driver/src/hsu_basic.min
endif
ifeq ($(USES_QHSUSB),yes)
  include $(QHSUSB)/src/qhsusb.min
endif

endif

#############################
# CACHE.....
#############################
CACHE_SOURCES= armmmu.o
CACHE_OBJS :=  $(addprefix $(TARGETDIR)/, $(CACHE_SOURCES:%.c=%.o)) $(TARGETDIR)/cache_mmu.o

#############################
#  FSBL source....
#############################
FSBL_C_OBJS = $(TARGETDIR)/fsbl_ram_init.o \
              $(TARGETDIR)/fsbl_mc.o \
              $(TARGETDIR)/fsbl_hw.o \
              $(TARGETDIR)/fsbl_hash_sha1.o \
              $(TARGETDIR)/fsbl_auth_x509.o \
              $(TARGETDIR)/fsbl_dload.o \
              $(TARGETDIR)/fsbl_config.o \
              $(TARGETDIR)/fsbl_stubs.o \
              $(TARGETDIR)/fsbl_target.o \
              $(TARGETDIR)/fsbl_error_handler.o

FSBL_SHARED_C_OBJ = $(TARGETDIR)/boot_util.o \
                    $(TARGETDIR)/boot_hw.o \
                    $(TARGETDIR)/boot_pbl_accessor.o
                   
FSBL_SHARED_A_OBJ = $(TARGETDIR)/boot_util_asm.o

# Assembly sources, this group should not be used in the combined OBJECTS
# list to avoid duplicate objs.
FSBL_A_OBJS = $(TARGETDIR)/fsbl_ram_data.o \
              $(TARGETDIR)/fsbl.o

FSBL_OBJS =  $(FSBL_C_OBJS) \
             $(FSBL_SHARED_C_OBJ) \
             $(FSBL_SHARED_A_OBJ) \
             $(FSBL_A_OBJS)


#-------------------------------------------------------------------------------
# Object groups that are specific to this target
#-------------------------------------------------------------------------------
# INSERT OBJECTS MACROS HERE
# Build the full object list for this target

#-------------------------------------------------------------------------------
# Public object group.....
#-------------------------------------------------------------------------------
PUBLIC_OBJECTS = $(FSBL_OBJS) $(CACHE_OBJS)

ifeq ($(USE_DM),TRUE)
    PUBLIC_OBJECTS += $(DM_OBJS) $(Q_OBJS)
endif

ifeq ($(FSBL_ENABLED_DLOAD),TRUE)
    PUBLIC_OBJECTS += $(CLKREGIM_OBJS) $(BIO_OBJS) $(DLOAD_OBJS) $(DLOAD_ADD_OBJS) \
                      $(UTILS_OBJS) $(EFUSE_OBJS) $(HW_OBJS)
endif


#-------------------------------------------------------------------------------
# Private object group.....
#-------------------------------------------------------------------------------
PRIVATE_OBJECTS = 

ifeq ($(USES_QHSUSB),yes)
    PRIVATE_OBJECTS += $(QHSUSB_COMMON_OBJS)
    PRIVATE_OBJECTS += $(QHSUSB_DLOAD_OBJS)
#else
endif
ifeq ($(USES_HSU),yes)
    PRIVATE_OBJECTS += $(HSU_OBJS)
endif

#endif

ifeq ($(USES_NO_STRIP_NO_ODM), yes)
  OBJECTS_LIST = $(PUBLIC_OBJECTS) $(PRIVATE_OBJECTS)
  OBJECTS = $(OBJECTS_LIST)
else
  OBJECTS_LIST = $(PUBLIC_OBJECTS) $(PRIVATE_OBJECTS)
  OBJECTS = $(PUBLIC_OBJECTS)
endif

# This object list should never be removed by the linker
KEEP_OBJECTS = fsbl.o\(*\)

#############################
# All the paths......
#############################
vpath %.c $(ROOT)/modem/rfa/pmic/common/src
vpath %.c $(ROOT)/modem/rfa/pmic/device/driver/src
vpath %.c $(ROOT)/modem/rfa/rf/common/src/rf
vpath %.c $(ROOT)/asic/apps/StaticExtensions/OEM/Src
vpath %.c $(HW)
vpath %.c $(UTILS)
vpath %.s $(BOOT)
vpath %.c $(BOOT)
vpath %.c $(BOOT_COMMON_TARGET)
vpath %.s $(BOOT_COMMON_SHARED_BOOT)
vpath %.c $(BOOT_COMMON_SHARED_BOOT)
vpath %.c $(FSBL_TARGET)
vpath %.s $(FSBL_SHARED)
vpath %.c $(FSBL_SHARED)
vpath %.c $(BOOT_COMMON_SHARED_SEC)

