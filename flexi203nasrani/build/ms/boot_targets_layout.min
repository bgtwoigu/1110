#============================================================================
#
#  Description:
#    An includable component of the makefile to build the DMSS software for
#    the SURF (Subscriber Unit Reference Design).
#
#    This file specifies the make file rules that are common across all
#    targets and makefiles
#
# Copyright (c) 2004-2007 by QUALCOMM, Incorporated. All Rights Reserved.
#----------------------------------------------------------------------------
#============================================================================
#
#                     EDIT HISTORY FOR MODULE
#
# $Header: //depot/asic/qsc1100/build/ms/boot_targets_layout.min#3 $ $DateTime: 2009/02/09 22:26:18 $ $Author: c_kumarg $
#
# when       who     what, where, why
# --------   ---     --------------------------------------------------------
# 11/30/07   ps      Initial ULC port
# 12/12/06   anb     Created.
#============================================================================

#-------------------------------------------------------------------------------
# Build paths
#-------------------------------------------------------------------------------
BUILD_NAME = `cd $(SRCROOT); pwd | sed 's/^.*\///';`
MBNPATH_OUTPUTIMAGESFORNOR = $(MBNPATH)

#-------------------------------------------------------------------------------
# Create MBN directory
#-------------------------------------------------------------------------------
GEN_MBN_PATHS = mkdir -p $(MBNPATH); mkdir -p $(MBNPATH)
GEN_MBN_PATHS_OUTPUTIMAGESFORNOR = mkdir -p $(MBNPATH_OUTPUTIMAGESFORNOR); mkdir -p $(MBNPATH_OUTPUTIMAGESFORNOR)


#-------------------------------------------------------------------------------
# Version
#-------------------------------------------------------------------------------
ifeq ($(USES_SECBOOT_2_0),yes)
GEN_SECBOOT_2_0 = 	-version 2 -fsbldestaddr $(FSBL_ADDR) -imemiram $(IMEM_BASE) -dbldestaddr $(DBL_ADDR) -osbldestaddr $(OSBL_ADDR) -osblstackaddr $(OSBL_STACK_BASE)
else
GEN_SECBOOT_2_0 = 	-qcsbldestaddr $(QCSBL_ADDR) -oemsbldestaddr $(OEMSBL_ADDR) -oemsblstackaddr $(OEMSBL_STACK_BASE)
endif

#-------------------------------------------------------------------------------
# Generate Header file using layout...
#-------------------------------------------------------------------------------
GEN_MIADDRESS_HEADER_TOOL = make -C $(HEADERGEN) -f pboot_utils.mak genmiaddress_header
ifeq "$(strip $(FLASH_TYPE))" "nand"
GEN_MIADDRESS_HEADER =  $(HEADERGEN)/genmiaddress_header \
                        -flashtype $(FLASH_TYPE) \
                        -ramstartaddr $(RAM_START_ADDR) \
                        -qcsbldestaddr $(QCSBL_ADDR) \
                        -oemsbldestaddr $(OEMSBL_ADDR) \
                        -oemsblstackaddr $(OEMSBL_STACK_BASE) \
                        -amssdestaddr $(AMSS_ADDR) \
                        -hostdldestaddr $(HOSTDL_DOWNLOAD_ADDR) \
                        -headerfilename $(MIBIB)/miaddress.h
else
GEN_MIADDRESS_HEADER = 	$(HEADERGEN)/genmiaddress_header -flashtype $(FLASH_TYPE) \
                        -ramstartaddr $(RAM_START_ADDR) \
				$(GEN_SECBOOT_2_0) -amssdataaddr $(AMSS_DATA_ADDR) -hostdldestaddr $(HOSTDL_DOWNLOAD_ADDR) \
                        -headerfilename $(MIBIB)/miaddress.h
ifeq ($(USES_NO_NOR_PARTITION), yes)
GEN_MIADDRESS_HEADER := $(GEN_MIADDRESS_HEADER) -dblsrcaddr $(DBL_SRC_ADDR) -fsblsrcaddr $(FSBL_SRC_ADDR) -osblsrcaddr $(OSBL_SRC_ADDR) -amsssrcaddr $(AMSS_SRC_ADDR)
else
GEN_MIADDRESS_HEADER := $(GEN_MIADDRESS_HEADER) -syspartition $(MBNPATH_OUTPUTIMAGESFORNOR)/sys_partition.mbn 
endif
endif
CLEAN_MIADDRESS_HEADER = if test -f $(MIBIB)/miaddress.h; then rm -f $(MIBIB)/miaddress.h; fi


#-------------------------------------------------------------------------------
# Copy Partition file correctly...
#-------------------------------------------------------------------------------
# Main target rule
#-------------------------------------------------------------------------------
ifeq "$(strip $(FLASH_TYPE))" "nand"
$(TARGET).layout : genmiaddressheader
else
ifeq ($(USES_NO_NOR_PARTITION), yes)
$(TARGET).layout: genmiaddressheader
else
$(TARGET).layout : gennorsystempartitionmbn genmiaddressheader
endif
endif


#-------------------------------------------------------------------------------
# Image generation rules
#-------------------------------------------------------------------------------
gennorsystempartitionmbn:
	@echo --------------------------------------------------------------
	@echo Creating Directories
	@$(GEN_MBN_PATHS)
	@$(GEN_MBN_PATHS_OUTPUTIMAGESFORNOR)
	@echo --------------------------------------------------------------
	@echo --------------------------------------------------------------
	@echo Generating NOR Partition MBN .....
	$(MAKE) -C $(PARTITION) -f partition.mak CUSTNAME=$(TARGET) FLASH_TYPE=$(FLASH_TYPE) all
	$(COPY)  $(call slashes,$(PARTITION)/partition_$(FLASH_TYPE).mbn $(MBNPATH_OUTPUTIMAGESFORNOR)/usr_partition.mbn)
	@echo Copied $(PARTITION)/partition_$(FLASH_TYPE).mbn to $(MBNPATH_OUTPUTIMAGESFORNOR)
	@echo Creating the tool for NOR Partition generation.....
ifeq ($(findstring RVCT,$(ARMTOOLS)),RVCT)
	@make -C $(MJFLASH_RVCT) -f jflash.mak BUILDID=$(BUILD) genexe
else
	@make -C $(MJFLASH) -f jflash.mak BUILDID=$(BUILD) genexe
endif
	@echo --------------------------------------------------------------
	@echo --------------------------------------------------------------
	@echo     ....... Creating System Partition Table.....
ifeq ($(USES_SPANSION_S29WS256N0SB),yes)
ifeq ($(findstring RVCT,$(ARMTOOLS)),RVCT)
	@$(MJFLASH_RVCT)/mjflash -f "SPANSION S29WS256N0SB" -u usr_partition.mbn -p $(MBNPATH_OUTPUTIMAGESFORNOR) -s sys_partition.mbn
else
	@$(MJFLASH)/mjflash -f "SPANSION S29WS256N0SB" -u usr_partition.mbn -p $(MBNPATH_OUTPUTIMAGESFORNOR) -s sys_partition.mbn	
endif
else # USES_SPANSION_S29WS512P
ifeq ($(findstring RVCT,$(ARMTOOLS)),RVCT)
	@$(MJFLASH_RVCT)/mjflash -f "SPANSION S29WS512P" -u usr_partition.mbn -p $(MBNPATH_OUTPUTIMAGESFORNOR) -s sys_partition.mbn
else
	@$(MJFLASH)/mjflash -f "SPANSION S29WS512P" -u usr_partition.mbn -p $(MBNPATH_OUTPUTIMAGESFORNOR) -s sys_partition.mbn
endif
endif
	@echo --------------------------------------------------------------

genmiaddressheader:
	@echo ----------------------------------------------------------------------
	@echo    Generating Header file
	@$(GEN_MIADDRESS_HEADER_TOOL)
	@$(GEN_MIADDRESS_HEADER)
	@echo ----------------------------------------------------------------------

#-------------------------------------------------------------------------------
# Build clean rules
#-------------------------------------------------------------------------------
cleanlayout:
	@echo ----------------------------------------------------------------------
	@echo Cleaning NOR Layout files ...
	@$(CLEAN_MIADDRESS_HEADER)
ifeq ($(findstring RVCT,$(ARMTOOLS)),RVCT)
	@make -C $(MJFLASH_RVCT) -f jflash.mak clean
else
	@make -C $(MJFLASH) -f jflash.mak clean
endif
	@echo ----------------------------------------------------------------------

#-------------------------------------------------------------------------------
# Rule to make complete layout...
#-------------------------------------------------------------------------------
ifeq "$(strip $(FLASH_TYPE))" "nand"
dolayout: genmiaddressheader
else
ifeq ($(USES_NO_NOR_PARTITION), yes)
dolayout: genmiaddressheader
else
dolayout: gennorsystempartitionmbn genmiaddressheader
endif
endif
