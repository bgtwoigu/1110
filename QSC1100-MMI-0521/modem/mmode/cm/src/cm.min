#-------------------------------------------------------------------------------
# $Header: //source/qcom/qct/modem/mmode/cm/rel/08H1/src/cm.min#3 $
# 
# 
# CM (Call Manager)
#-------------------------------------------------------------------------------
CM_SOURCES=\
	cm.c \
	cmals.c \
	cmbcmcs.c \
	cmcall.c \
	cmclient.c \
	cmdbg.c \
	cmdiag.c \
	cmgsdi.c \
	cminband.c \
	cmll.c \
	cmlog.c \
        cmmbms.c \
        cmmmgsdi.c \
	cmnas.c \
	cmnv.c \
	cmph.c \
	cmpref.c \
	cmregprx.c \
	cmreply.c \
	cmsms.c \
	cmss.c \
	cmssidm.c \
	cmtask.c \
	cmutil.c \
	cmwaoc.c \
	cmwcall.c \
	cmwll.c \
	cmwsups.c \
	cmxcall.c \
	cmxdbm.c \
	cmxll.c \
	cmxpd.c \
	cmxsms.c \
	cmipapp.c \
	cmipcall.c \
	cmipqvp.c \
	cmipsms.c \
	net.c \
	homer.c \
	sys.c \
        sys_gw.c\
        cmgan.c\

vpath %.c $(CM)

ifeq ($(BIG),yes)
	CM_OBJS := $(TARGETDIR)/cm.lib
else
	CM_OBJS :=  $(addprefix $(TARGETDIR)/, $(CM_SOURCES:%.c=%.o))
endif

$(TARGETDIR)/cm.lib : $(CM_SOURCES)
	$(group_c_compile)

### Start Lint block ###
ifeq ($(DO_LINT),yes)

CM_LINT_OBJS := $(addprefix $(LINTDIR)/, $(CM_SOURCES:%.c=%.lint))

# Specify group target for linting CM subsystem
$(LINTDIR)/cm_lint : $(CM_LINT_OBJS)

endif
### End Lint block ###

#============================================================================
# Support for exporting the CM API from modem to apps
#============================================================================
CM_UTIL_SOURCES = \
    sys.c \
    net.c

CM_UTIL_OBJS := $(addprefix $(TARGETDIR)/, $(CM_UTIL_SOURCES:%.c=%.o))

ifeq ($(USES_EXPORT_CM),yes)

  CM_CLIENT_SOURCES = \
      cm_xdr.c \
      cm_clnt.c

  CM_SERVER_SOURCES = \
      cm_svc.c \
      cm_xdr.c

  CM_CLIENT_OBJS := $(addprefix $(TARGETDIR)/, $(CM_CLIENT_SOURCES:%.c=%.o))
  CM_SERVER_OBJS := $(addprefix $(TARGETDIR)/, $(CM_SERVER_SOURCES:%.c=%.o))

  ifneq ($(REMOTE_API_LOC_KNOWN),yes)
    htorpc_cm : REMOTE_API_LOC = $(CM)
    htorpc_cm :
	@$(MAKE_AGAIN)
  endif

  HTORPC_cm_ARGS = -a cm
  HTORPC_DEPS += cm

  vpath %.h $(CM)
  vpath %.c $(CM)

endif

#============================================================================
# Support for exporting the CMIPAPP API from modem to apps
#============================================================================
ifeq ($(USES_EXPORT_CMIPAPP),yes)

  CMIPAPP_CLIENT_SOURCES = \
      cmipapp_xdr.c \
      cmipapp_clnt.c

  CMIPAPP_SERVER_SOURCES = \
      cmipapp_svc.c \
      cmipapp_xdr.c

  CMIPAPP_CLIENT_OBJS := $(addprefix $(TARGETDIR)/, $(CMIPAPP_CLIENT_SOURCES:%.c=%.o))
  CMIPAPP_SERVER_OBJS := $(addprefix $(TARGETDIR)/, $(CMIPAPP_SERVER_SOURCES:%.c=%.o))

  ifneq ($(REMOTE_API_LOC_KNOWN),yes)
    htorpc_cmipapp : REMOTE_API_LOC = $(CM)
    htorpc_cmipapp :
	@$(MAKE_AGAIN)
  endif

  HTORPC_cmipapp_ARGS = -a cmipapp
  HTORPC_DEPS += cmipapp

  vpath %.h $(CM)
  vpath %.c $(CM)

endif

#============================================================================
# Support for exporting the CMGAN API from modem to apps
#============================================================================
ifeq ($(USES_EXPORT_CMGAN),yes)

  CMGAN_CLIENT_SOURCES = \
      cmgan_xdr.c \
      cmgan_clnt.c

  CMGAN_SERVER_SOURCES = \
      cmgan_svc.c \
      cmgan_xdr.c

  CMGAN_CLIENT_OBJS := $(addprefix $(TARGETDIR)/, $(CMGAN_CLIENT_SOURCES:%.c=%.o))
  CMGAN_SERVER_OBJS := $(addprefix $(TARGETDIR)/, $(CMGAN_SERVER_SOURCES:%.c=%.o))

  ifneq ($(REMOTE_API_LOC_KNOWN),yes)
    htorpc_cmgan : REMOTE_API_LOC = $(CM)
    htorpc_cmgan :
	@$(MAKE_AGAIN)
  endif

  HTORPC_cmgan_ARGS = -a cmgan
  HTORPC_DEPS += cmgan

  vpath %.h $(CM)
  vpath %.c $(CM)

endif