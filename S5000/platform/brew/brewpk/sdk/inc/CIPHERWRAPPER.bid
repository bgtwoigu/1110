#ifndef CIPHERWRAPPER_BID
#define CIPHERWRAPPER_BID

#define AEECLSID_CIPHERMODE_ECB  0x0102ccd7 
#define AEECLSID_CIPHERMODE_CBC  0x0102ccd9
#define AEECLSID_CIPHERMODE_CFB  0x0102ccda 
#define AEECLSID_CIPHERMODE_OFB  0x0102ccdb 
#define AEECLSID_CIPHERMODE_CTR  0x0102ccdc
#define AEECLSID_PADCIPHER       0x0102ccdd


/*======================================================================
  CLASS DOCUMENTATION
=======================================================================

Cipher Wrapper modes

Description:
   These modes may be supported directly by an ICipher implementation or 
   the ICipherFactory may use an ICipherWrapper to add the functionality
   to an ICipher or IRawBlockCipher when it is not supported by
   the implementation.  
   
*   
AEECLSID_CIPHERMODE_ECB

Description:
   Electronic Code Book block mode.  This is the default
   block mode.  No special processing is done between blocks.  No
   IV is required.
   
*   
AEECLSID_CIPHERMODE_CBC
Description:
   Cipher Block Chaining mode.  It adds a feedback mechanism
   to a block cipher that feeds back the results of one block into
   the next.  The IV provides an initial state for the feedback
   mechanism and should be initialized before using the ICipher.

*   
AEECLSID_CIPHERMODE_CFB
Description:
   Cipher Feedback Mode.  This mode supports the 8-bit CFB algorithm. It
   allows a block cipher to be used in streaming mode.  The IV provides
   an initial state and should be initialized before using the ICipher.
   
*   
AEECLSID_CIPHERMODE_OFB
Description:
   Output Feedback Mode.  This mode supports the 8-bit OFB algorithm. It
   allows a block cipher to be used in streaming mode.  The IV provides
   an initial state and should be initialized before using the ICipher.

*   
AEECLSID_CIPHERMODE_CTR
   Counter Mode.  Allows a block cipher to be used in streaming mode.  
   The IV provides an initial state and should be initialized before using
   the ICipher.
   

*
AEECLSID_PADCIPHER

Description:
   This class is used by the ICipherFactory to add the standard
   padding modes to a block cipher.  Padding styles include
   none
      - no padding or buffering is performed. Caller must always
        provide full blocks.
   zero fill
      - pad up to the blocksize with zeros.  On decrypt,
        all bytes including pad are returned to caller.
   Length fill 
      - Pad with zeros, except last byte which is # bytes padded.
        Always adds at least one pad byte.  On decrypt, padding
        is stripped.
   Random data fill
      - Pad with random bytes.  Last byte is # bytes padded.
        Always adds at least one pad byte. On decrypt, padding is
        stripped.
   RFC2630 fill
      - Pad each byte with # bytes padded (1-255) per RFC 2630.
        Always adds at least one pad byte.  On decrypt, padding 
        is stripped.
   
   SEQUENTIAL fill
      - Pad each byte with # bytes padded (1-255).  Always adds
        at least one pad byte.  On decrypt, padding is stripped.
        
See also: ICipher.h
   
=====================================================================

*/
#endif //CIPHERWRAPPER_BID

