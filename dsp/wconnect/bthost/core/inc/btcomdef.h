#ifndef _BTCOMDEF_H
#define _BTCOMDEF_H

/*====*====*====*====*====*====*====*====*====*====*====*====*====*====*====*

          B L U E T O O T H    C O M M O N  D E F I N I T I O N S
                               H E A D E R 

DESCRIPTION
  This file contains declarations that are common to the the Bluetooth (bt) 
  driver and Bluetooth profile (btpf) module.

Copyright (c) 2007-2009 by QUALCOMM Incorporated. All Rights Reserved.
*====*====*====*====*====*====*====*====*====*====*====*====*====*====*====*/

/*===========================================================================

                        EDIT HISTORY FOR MODULE

This section contains comments describing changes made to the module.
Notice that changes are listed in reverse chronological order.

 $Header: //source/qcom/qct/wconnect/bthost/core/rel/00.00.26/inc/btcomdef.h#2 $
 $DateTime: 2009/04/17 11:28:04 $

  when        who  what, where, why
 ----------  ---  -----------------------------------------------------------
 2009-01-14   gs   Added BT_EV_PF_OPP_CLI_CON_PROG_IND event
 2008-09-09   NM   Added data structures to handle retrieval of link key for
                   automation
 2008-05-28   hs   Added the support for AVRCP 1.3 meta data feature
                   by adding event and error codes

*   #10       03 Mar 2008            GS
* Added Get/SetReport HID events in bt_event_type
*
*   #9        29 Feb 2008            AG
* Added new status code for deprecated commands.
*
*   #8        29 Nov 2007            HM
* Added SD event to return service search results in XML format
*
*   #7        07 Nov 2007            GS
* Added HID profile host role support.
*
*   #6        01 Nov 2007            AG
* Merged Lisbon(BT2.1) changes into the mainline
*
*   #5        31 Oct 2007            VK
*  Added macros to support Inquiry result event with RSSI.
* 
*   #4        19 Oct 2007            SSK
* Add new command mask for BT HC Flow control command type.
*
*   #3        20 Aug 2007            PG
* Seperated HCI generic vendor specific event handling from Qualcomm 
* proprietary implementation used with embedded controller.
*
*   #2        17 Jul 2007            PR
* Remote name request cancel support in SD
*
*   #1        01 Jun 2007            DSN
* Created file.

==========================================================================*/


#include "customer.h"

//#ifdef FEATURE_BT   //modi by yangdecai
/*===========================================================================

                     INCLUDE FILES FOR MODULE

===========================================================================*/

/*===========================================================================

                DEFINITIONS AND DECLARATIONS FOR MODULE

This section contains definitions for constants, macros, types, variables
and other items needed by this module.

===========================================================================*/

#define BT_PACKED __packed

typedef uint16 bt_app_id_type;

typedef BT_PACKED struct _bt_bd_addr_type /*  BT Device Address.  */
{
  uint8  bd_addr_bytes[ 6 ];  /*  48 bits  */
} bt_bd_addr_type;

/* Definition for a UUID */
typedef uint16 bt_sd_uuid_type; /* 16-bit UUID */

typedef uint32 bt_sd_uuid32_type; /* 32-bit UUID */

typedef enum
{
  BT_SEC_NONE,
  BT_SEC_AUTHENTICATE,
  BT_SEC_AUTHENTICATE_AND_ENCRYPT,
  BT_SEC_MAX                           /*  BT driver internal use only.  */
} bt_security_type;

/* Definition for a 128-bit UUID */
typedef BT_PACKED struct
{
  uint8            uuid_byte[ 16 ];
} bt_sd_uuid128_type;


typedef enum  /*  For use with bt_cmd_dc_set_hci_mode()  */
{
  BT_HCIM_OFF,
  BT_HCIM_STANDARD_HCI_ON,      /*  Stand alone DSP image.  */
  BT_HCIM_STANDARD_HCI_VOC_ON,  /*  BT/vocoder DSP image.   */
  BT_HCIM_APIT_HCI_ON,          /*  BT/vocoder DSP image.   */
  BT_HCIM_APIT_HCI_SA_ON        /*  Stand alone DSP image.  */
#ifdef FEATURE_FACTORY_TESTMODE
  ,BT_HCIM_STANDARD_HCI_FTM     /*  HCI via FTM.            */
  ,BT_HCIM_STANDARD_APIT_FTM    /*  APIT via FTM.           */
#endif
} bt_hci_mode_type;


/*-------------------------------------------------------------------------*/
/*                QDSP Swapping Declarations                               */
/*-------------------------------------------------------------------------*/

/*  For internal use and via HCI */
typedef enum
{
  BT_IMAGE_NONE,
  BT_IMAGE_VOC,
  BT_IMAGE_BT_ONLY,
  BT_IMAGE_BT_AND_VR
} bt_image_enum_type;

typedef enum
{
  BT_DSP_IMAGE_QDSP_VOC,
  BT_DSP_IMAGE_QDSP_BT,
  BT_DSP_IMAGE_QDSP_VR,
  BT_DSP_IMAGE_MDSP_1X,
  BT_DSP_IMAGE_MDSP_WCDMA,
  BT_DSP_IMAGE_MDSP_GSM,
  BT_DSP_IMAGE_MDSP_GPRS,
  BT_DSP_IMAGE_OTHER,
  BT_DSP_IMAGE_MAX
} bt_dsp_image_enum_type;

#define BT_CMD_EV_NULL       0xFFFF

#define BT_CMD_EV_MIN        0x0FFF
#define BT_CMD_EV_GN_BASE    0x1000
#define BT_CMD_EV_DC_BASE    (BT_CMD_EV_GN_BASE | 0x0400)
#define BT_CMD_EV_EC_BASE    (BT_CMD_EV_GN_BASE | 0x0800)
#define BT_CMD_EV_NA_BASE    0x2000
#define BT_CMD_EV_AG_BASE    0x3000
#define BT_CMD_EV_BA_BASE    0x4000
#define BT_CMD_EV_SD_BASE    0x5000
#define BT_CMD_EV_SDP_BASE   (BT_CMD_EV_SD_BASE | 0x0100)
#define BT_CMD_EV_SP_BASE    0x6000
#define BT_CMD_EV_RC_BASE    0x7000
#define BT_CMD_EV_L2_BASE    0x9000
#define BT_CMD_EV_RM_BASE    0xA000
#define BT_CMD_EV_HC_BASE    0xB000
#define BT_CMD_EV_HCI_BASE   (BT_CMD_EV_HC_BASE | 0x0100)
#define BT_CMD_EV_SIO_BASE   0xC000
#define BT_CMD_EV_PF_GN_BASE   0xD000
#define BT_CMD_EV_FCTL_BASE  0xE000
#define BT_CMD_EV_PF_GOEP_BASE (BT_CMD_EV_PF_GN_BASE | 0x0100)
#define BT_CMD_EV_PF_OPP_BASE  (BT_CMD_EV_PF_GN_BASE | 0x0200)
#define BT_CMD_EV_PF_FTP_BASE  (BT_CMD_EV_PF_GN_BASE | 0x0300)
#define BT_CMD_EV_PF_BIP_BASE  (BT_CMD_EV_PF_GN_BASE | 0x0400)
#define BT_CMD_EV_PF_BPP_BASE  (BT_CMD_EV_PF_GN_BASE | 0x0500)
#define BT_CMD_EV_PF_SML_BASE  (BT_CMD_EV_PF_GN_BASE | 0x0600)
#define BT_CMD_EV_PF_CTP_BASE  (BT_CMD_EV_PF_GN_BASE | 0x0700)
#define BT_CMD_EV_PF_L2IF_BASE (BT_CMD_EV_PF_GN_BASE | 0x0800)
#define BT_CMD_EV_PF_SAP_BASE   (BT_CMD_EV_PF_GN_BASE | 0x0900)
#define BT_CMD_EV_PF_A2DP_BASE  (BT_CMD_EV_PF_GN_BASE | 0x0A00)
#define BT_CMD_EV_PF_AVRCP_BASE (BT_CMD_EV_PF_GN_BASE | 0x0B00)
#define BT_CMD_EV_PF_AVDTP_BASE (BT_CMD_EV_PF_GN_BASE | 0x0C00)
#define BT_CMD_EV_PF_PBAP_BASE  (BT_CMD_EV_PF_GN_BASE | 0x0D00)
#define BT_CMD_EV_PF_HID_HOST_BASE  (BT_CMD_EV_PF_GN_BASE | 0x0E00)

#ifdef FEATURE_BT_TEST_API
#error code not present
#endif /* FEATURE_BT_TEST_API */


/*-------------------------------------------------------------------------*/
/*  HCI/LMP/BB specific definitions.                                       */
/*-------------------------------------------------------------------------*/

typedef enum
{
  BT_BE_SUCCESS                                = 0x00,
  BT_BE_UNKNOWN_HCI_CMD,                      // 0x01
  BT_BE_NO_CONNECTION,                        // 0x02
  BT_BE_HW_FAILURE,                           // 0x03
  BT_BE_PAGE_TIMEOUT,                         // 0x04
  BT_BE_AUTHENTICATION_FAILURE,               // 0x05
  BT_BE_KEY_MISSING,                          // 0x06
  BT_BE_MEMORY_FULL,                          // 0x07
  BT_BE_CONNECTION_TIMEOUT,                   // 0x08
  BT_BE_MAX_CONNECTIONS,                      // 0x09
  BT_BE_MAX_SCO_CONNECTIONS,                  // 0x0A
  BT_BE_ACL_ALREADY_EXISTS,                   // 0x0B
  BT_BE_CMD_DISALLOWED,                       // 0x0C
  BT_BE_CONN_REJECTED_NO_RESOURCE,            // 0x0D
  BT_BE_CONN_REJECTED_SECURITY_FAILURE,       // 0x0E
#ifdef FEATURE_BT_1_2
  BT_BE_CONN_REJECTED_BD_ADDR,                // 0x0F
#else
  BT_BE_CONN_REJECTED_PERSONAL_DEVICE,        // 0x0F
#endif
  BT_BE_HOST_TIMEOUT,                         // 0x10
  BT_BE_UNSUPPORTED_FEATURES_PARAM_VALUES,    // 0x11
  BT_BE_INVALID_HCI_CMD_PARAMS,               // 0x12
  BT_BE_USER_ENDED_CONNECTION,                // 0x13
  BT_BE_LOW_RESOURCES,                        // 0x14
  BT_BE_POWER_GOING_OFF,                      // 0x15
  BT_BE_LOCAL_HOST_TERMINATED_CONNECTION,     // 0x16
  BT_BE_REPEATED_ATTEMPTS,                    // 0x17
  BT_BE_PAIRING_NOT_ALLOWED,                  // 0x18
  BT_BE_UNKNOWN_LMP_PDU,                      // 0x19
  BT_BE_UNSUPPORTED_LMP_FEATURE,              // 0x1A
  BT_BE_SCO_OFFSET_REJECTED,                  // 0x1B
  BT_BE_SCO_INTERVAL_REJECTED,                // 0x1C
  BT_BE_SCO_AIR_MODE_REJECTED,                // 0x1D
  BT_BE_INVALID_LMP_PARAMS,                   // 0x1E
  BT_BE_UNSPECIFIED_ERROR,                    // 0x1F
  BT_BE_UNSUPPORTED_LMP_PARAMS,               // 0x20
  BT_BE_SWITCH_NOT_ALLOWED,                   // 0x21
  BT_BE_LMP_RESPONSE_TIMEOUT,                 // 0x22
  BT_BE_LMP_ERROR_TRANSACTION_COLLISION,      // 0x23
  BT_BE_PDU_NOT_ALLOWED,                      // 0x24
  BT_BE_ENCRYPT_MODE_NOT_ACCEPTED,            // 0x25
  BT_BE_UNIT_KEY_USED,                        // 0x26
  BT_BE_QOS_NOT_SUPPORTED,                    // 0x27
  BT_BE_INSTANT_PASSED,                       // 0x28
  BT_BE_PAIRING_WITH_UNIT_KEY_NOT_ALLOWED,    // 0x29
#ifndef FEATURE_BT_1_2 /* BT 1.1 */                              
  BT_BE_INSUFFICIENT_RESOURCES,               // 0x2A
  BT_BE_LAST                                  // 0x2B
#else /* BT 1.2 */
  BT_BE_DIFFERENT_TRANSACTION_COLLISION,      // 0x2A
  BT_BE_0X2B_SKIPPED,                         // 0x2B
  BT_BE_QOS_UNACCEPTABLE_PARAMETER,           // 0x2C
  BT_BE_QOS_REJECTED,                         // 0x2D
  BT_BE_CHANNEL_CLASSIFICATION_NOT_SUPPORTED, // 0x2E
  BT_BE_INSUFFICIENT_SECURITY,                // 0x2F
  BT_BE_PARAMETER_OUT_OF_MANDATORY_RANGE,     // 0x30
  BT_BE_0X31_SKIPPED,                         // 0x31
  BT_BE_ROLE_SWITCH_PENDING,                  // 0x32
  BT_BE_0X33_SKIPPED,                         // 0x33
  BT_BE_RESERVED_SLOT_VIOLATION,              // 0x34
  BT_BE_ROLE_SWITCH_FAILED,                   // 0x35
  BT_BE_LAST                                  // 0x36
#endif /* FEATURE_BT_1_2 */
} bt_error_code_type;

typedef enum
{
  BT_CS_GN_PENDING =                        BT_CMD_EV_GN_BASE,
  BT_CS_GN_SUCCESS,
  BT_CS_GN_BAD_CMD_STATE,
  BT_CS_GN_CMD_Q_FULL,
  BT_CS_GN_BAD_APP_ID,
  BT_CS_GN_UNRECOGNIZED_CMD,
  BT_CS_GN_MAX_CMD_RETRIES,
  BT_CS_GN_RETRY_CMD_LATER,
  BT_CS_GN_DEPRECATED_CMD,

  BT_CS_DC_BAD_HCI_MODE =                   BT_CMD_EV_DC_BASE,
  BT_CS_DC_NO_SIO_PORT_ID,
  BT_CS_DC_SIO_OPEN_FAILED,
  BT_CS_DC_DRIVER_OFFLINE,
  BT_CS_DC_DUP_DRIVER_ONLINE_REQ,
  BT_CS_DC_NO_APP_ID,
  BT_CS_DC_SIO_PORT_ALREADY_OPENED,

  BT_CS_EC_BAD_EVENT_SET =                  BT_CMD_EV_EC_BASE,
  BT_CS_EC_BAD_CALLBACK_PTR,
  BT_CS_EC_REG_FULL,
  BT_CS_EC_DUPLICATE_REG,

  BT_CS_NA_UNRECOGNIZED_CMD =               BT_CMD_EV_NA_BASE,
  BT_CS_NA_NO_SIO_PORT,
  BT_CS_NA_ALREADY_ENABLED,

#ifdef FEATURE_BT_AG
  BT_CS_AG_ALREADY_ENABLED =                BT_CMD_EV_AG_BASE,
  BT_CS_AG_ALREADY_CONNECTED,
  BT_CS_AG_NOT_CONNECTED,
  BT_CS_AG_NOT_ENABLED,
  BT_CS_AG_NO_SIO_STREAM,
  BT_CS_AG_NO_AUDIO,
  BT_CS_AG_VOLUME_OUT_OF_RANGE,
  BT_CS_AG_INVALID_PARAMETERS,
  BT_CS_AG_INTERNAL_ERROR,
  BT_CS_AG_NO_BD_ADDR,
  BT_CS_AG_NO_SLC,
#endif /* FEATURE_BT_AG */

  BT_CS_BA_DEVICE_NOT_FOUND =               BT_CMD_EV_BA_BASE,
  BT_CS_BA_DEVICE_DB_UPDATED,
  BT_CS_BA_INTERNAL_ERROR,
  BT_CS_BA_BAD_PARAM,

  BT_CS_SD_UNRECOGNIZED_CMD =               BT_CMD_EV_SD_BASE,
  BT_CS_SD_DEVICE_DISCOVERY_ALREADY_IN_PROGRESS,
  BT_CS_SD_DEVICE_DISCOVERY_NOT_STARTED,
  BT_CS_SD_REMOTE_NAME_REQ_ALREADY_IN_PROGRESS,
  BT_CS_SD_LOCAL_SERVICE_DB_FULL,
  BT_CS_SD_SERVICE_RECORD_NOT_FOUND,
  BT_CS_SD_SERVICE_RECORD_EXISTS,
  BT_CS_SD_MAX_DISCOVERABLE_APPLICATIONS,
  BT_CS_SD_BAD_PARAM,
  BT_CS_SD_REMOTE_NAME_REQ_NOT_IN_PROGRESS,

  BT_CS_RC_UNRECOGNIZED_CMD =               BT_CMD_EV_RC_BASE,
  BT_CS_RC_BAD_SC,
  BT_CS_RC_BAD_PID,
  BT_CS_RC_REG_FULL,
  BT_CS_RC_BAD_CONFIG,
  BT_CS_RC_BAD_DATA_LEN,
  BT_CS_RC_CONN_ACTIVE,
  BT_CS_RC_CONN_MAX_SESSIONS,
  BT_CS_RC_CONN_MAX_DLCS,
  BT_CS_RC_TXD_INVALID_TX_WM,
  BT_CS_RC_BAD_BD_ADDR,

  BT_CS_L2_UNRECOGNIZED_CMD =               BT_CMD_EV_L2_BASE,
  BT_CS_L2_SETPRM_REG_FULL,
  BT_CS_L2_REG_FULL,
  BT_CS_L2_REG_DUPLICATE,
  BT_CS_L2_CONN_NOT_REGISTERED,
  BT_CS_L2_CONN_ALL_USED,
  BT_CS_L2_WRITE_CID_NOT_FOUND,
  BT_CS_L2_WRITE_BIG_PKT_SIZE,
  BT_CS_L2_DISC_CID_NOT_FOUND,
  BT_CS_L2_DISC_ERROR,
  BT_CS_L2_UNREG_NOT_FOUND,
  BT_CS_L2_INVALID_PSM,
  BT_CS_L2_CONN_NOT_UP,
  BT_CS_L2_DIS_TO_CID_NOT_FOUND,

  BT_CS_RM_UNRECOGNIZED_CMD =               BT_CMD_EV_RM_BASE,
  BT_CS_RM_MAX_CONNECTIONS,
  BT_CS_RM_MAX_DEVICES,
  BT_CS_RM_MAX_APPLICATIONS,
  BT_CS_RM_BAD_HANDLE,
  BT_CS_RM_BUSY,
  BT_CS_RM_NO_CONNECTION,
  BT_CS_RM_NO_DEVICE,
  BT_CS_RM_BAD_PARAM,
  BT_CS_RM_CONN_ACTIVE,
  BT_CS_RM_NAME_REQ_FAILED,
  BT_CS_RM_LPC_BAD_CONFIG,
  BT_CS_RM_LPC_BAD_INTERVAL,
  BT_CS_RM_LPC_BAD_LATENCY,
  BT_CS_RM_DEVICE_EXISTS,
  BT_CS_RM_EFS_ERR,
  BT_CS_RM_UNEXP_PIN_REPLY,
  BT_CS_RM_BAD_SERVICE_SEC,
  BT_CS_RM_MAX_SERVICE_SECS,
  BT_CS_RM_BAD_UUID_SCN_PAIR,
  BT_CS_RM_MAX_UUID_SCN_PAIRS,
  BT_CS_RM_RADIO_OFF,
  BT_CS_RM_PIN_TOO_SHORT,
  BT_CS_RM_CMD_NOT_ALLOWED,
  BT_CS_RM_UNEXP_UCONF_REPLY,
  BT_CS_RM_UNEXP_PASSKEY_REPLY,
  BT_CS_RM_UNEXP_KEYPRESS_NOTIFICATION,
  BT_CS_RM_UNEXP_AUTHORIZE_REBOND,

  BT_CS_HCI_START =                        BT_CMD_EV_HCI_BASE,
  BT_CS_HCI_END =                          (BT_CMD_EV_HCI_BASE +
                                            BT_BE_LAST),
#ifdef FEATURE_BT_EXTPF
  BT_CS_PF_INVALID_PARAMETERS =             BT_CMD_EV_PF_GN_BASE,
  BT_CS_PF_NOT_IMPLEMENTED,
  BT_CS_PF_NOT_INITIALIZED,
  BT_CS_PF_NO_RESOURCES,
  BT_CS_PF_INTERNAL_ERROR,
  BT_CS_PF_OUT_OF_MEMORY,
  BT_CS_PF_ILLEGAL_REENTRANT_CALL,
  BT_CS_PF_INITIALIZATION_FAILED,
  BT_CS_PF_INITIALIZATION_PENDING,
  BT_CS_PF_NO_SCO_SUPPORT,
  BT_CS_PF_OUT_OF_STATIC_MEMORY,
  BT_CS_PF_TIMEOUT,
  BT_CS_PF_OS_ERROR,
  BT_CS_PF_FAIL,
  BT_CS_PF_STRING_FORMAT_ERROR,
  BT_CS_PF_PENDING,
  BT_CS_PF_INVALID_COMMAND,
  BT_CS_PF_BUSY_FAIL,
  BT_CS_PF_ALREADY_REGISTERED,
  BT_CS_PF_NOT_FOUND,
  BT_CS_PF_NOT_REGISTERED,
  BT_CS_PF_NOT_CONNECTED,
  BT_CS_PF_CALLBACK_FUNCTION_REQUIRED,
  BT_CS_PF_MBUF_OVERFLOW,
  BT_CS_PF_MBUF_UNDERFLOW,
  BT_CS_PF_CONNECTION_EXISTS,
  BT_CS_PF_NOT_CONFIGURED,
  BT_CS_PF_LOWER_STACK_ERROR,
  BT_CS_PF_RESET_IN_PROGRESS,
  BT_CS_PF_ACCESS_DENIED,
  BT_CS_PF_DATA_ERROR,
  BT_CS_PF_INVALID_ROLE,
  BT_CS_PF_ALREADY_CONNECTED,
  BT_CS_PF_PARSE_ERROR,
  BT_CS_PF_END_OF_FILE,
  BT_CS_PF_READ_ERROR,
  BT_CS_PF_WRITE_ERROR,
  BT_CS_PF_NEGOTIATION_FAILURE,
  BT_CS_PF_READ_IN_PROGRESS,
  BT_CS_PF_ALREADY_INITIALIZED,
  BT_CS_PF_STILL_CONNECTED,
  BT_CS_PF_MTU_EXCEEDED,
  BT_CS_PF_LINK_TERMINATED,
  BT_CS_PF_CHANNEL_NOT_FOUND,
  BT_CS_PF_INVALID_STATE,
  BT_CS_PF_INVALID_PACKET,
  BT_CS_PF_INVALID_HANDLE,
  BT_CS_PF_DISPATCH_INVALID_CB_HANDLE,
  BT_CS_PF_DISPATCH_TABLE_OVERFLOW,
  BT_CS_PF_SDP_NO_MATCHING_SERVICE_RECORD,
  BT_CS_PF_SDP_ATTRIBUTE_NOT_FOUND,
  BT_CS_PF_SDP_DATABASE_OUT_OF_RESOURCES,
  BT_CS_PF_RFCOMM_WRITE_IN_PROGRESS,
  BT_CS_PF_RFCOMM_LINK_NOT_FOUND,
  BT_CS_PF_RFCOMM_ESTABLISH_FAILURE,
  BT_CS_PF_RFCOMM_SESSION_SHUTDOWN,
  BT_CS_PF_RFCOMM_OUT_OF_SERVER_CHANNELS,
  BT_CS_PF_STILL_REGISTERED,

#ifdef FEATURE_BT_EXTPF_GOEP
  BT_CS_PF_OBEX_CONTINUE =                        BT_CMD_EV_PF_GOEP_BASE,
  BT_CS_PF_OBEX_COMMAND_ERROR,
  BT_CS_PF_OBEX_CONNECTION_TIMEOUT,
  BT_CS_PF_OBEX_CONNECT_FAILED,
  BT_CS_PF_OBEX_DISCONNECT_FAILED,
  BT_CS_PF_OBEX_ERROR,
  BT_CS_PF_OBEX_INCOMPLETE_PACKET,
  BT_CS_PF_OBEX_LENGTH_REQUIRED,
  BT_CS_PF_OBEX_NOT_CONNECTED,
  BT_CS_PF_OBEX_NO_MORE_CONNECTIONS,
  BT_CS_PF_OBEX_OPERATION_IN_PROGRESS,
  BT_CS_PF_OBEX_PUT_RESPONSE_ERROR,
  BT_CS_PF_OBEX_GET_RESPONSE_ERROR,
  BT_CS_PF_OBEX_REQUIRED_HEADER_NOT_FOUND,
  BT_CS_PF_OBEX_SERVICE_UNAVAILABLE,
  BT_CS_PF_OBEX_TOO_MANY_HEADER_BYTES,
  BT_CS_PF_OBEX_UNKNOWN_COMMAND,
  BT_CS_PF_OBEX_UNSUPPORTED_VERSION,
  BT_CS_PF_OBEX_CLIENT_ABORTED_COMMAND,
  BT_CS_PF_OBEX_BAD_PACKET,
  BT_CS_PF_OBEX_BAD_REQUEST,
  BT_CS_PF_OBEX_OBJECT_OVERFLOW,
  BT_CS_PF_OBEX_NOT_FOUND,
  BT_CS_PF_OBEX_ACCESS_DENIED,
  BT_CS_PF_OBEX_VALUE_NOT_ACCEPTABLE,
  BT_CS_PF_OBEX_PACKET_OVERFLOW,
  BT_CS_PF_OBEX_NO_SUCH_FOLDER,
  BT_CS_PF_OBEX_NAME_REQUIRED,
  BT_CS_PF_OBEX_PASSWORD_TOO_LONG,
  BT_CS_PF_OBEX_PRECONDITION_FAILED,
  BT_CS_PF_OBEX_UNAUTHORIZED,
  BT_CS_PF_OBEX_NOT_IMPLEMENTED,
  BT_CS_PF_OBEX_INVALID_AUTH_DIGEST,
  BT_CS_PF_OBEX_INVALID_OPERATION,
  BT_CS_PF_OBEX_DATABASE_FULL,
  BT_CS_PF_OBEX_DATABASE_LOCKED,
  BT_CS_PF_OBEX_INTERNAL_SERVER_ERROR,
  BT_CS_PF_OBEX_UNSUPPORTED_MEDIA_TYPE,
  BT_CS_PF_OBEX_PARTIAL_CONTENT,
  BT_CS_PF_OBEX_METHOD_NOT_ALLOWED,
  BT_CS_PF_OBEXSRV_INCOMPLETE_GET,
  BT_CS_PF_OBEX_FOLDER_BROWSING_NOT_ALLOWED,
  BT_CS_PF_OBEX_SERVER_FORCED_DISCONNECT,
  BT_CS_PF_OBEX_CONNECTION_NOT_FOUND,
  BT_CS_PF_OBEX_NOT_MODIFIED,
  BT_CS_PF_OBEX_GONE,
  BT_CS_PF_OBEX_REQ_TIMEOUT,
  BT_CS_PF_OBEX_OFS_ERROR,
  BT_CS_PF_OBEX_FILEOP_ERROR,
#endif /* FEATURE_BT_EXTPF_GOEP */

#ifdef FEATURE_BT_EXTPF_CTP
  BT_CS_PF_CTP_INVALID_ELEMENT_TYPE = BT_CMD_EV_PF_CTP_BASE,
  BT_CS_PF_CTP_INVALID_PACKET,
  BT_CS_PF_CTP_CALL_IN_PROGRESS,
  BT_CS_PF_CTP_NO_CALL_IN_PROGRESS,
#endif /* FEATURE_BT_EXTPF_CTP */

  /* No specific feature define for the following, as it's used by
     many profiles: */
  BT_CS_PF_L2CAP_WRITE_IN_PROGRESS = BT_CMD_EV_PF_L2IF_BASE,
  BT_CS_PF_PSM_ALREADY_REGISTERED,
  BT_CS_PF_INVALID_CID,
  BT_CS_PF_CID_NOT_FOUND,
  BT_CS_PF_PSM_NOT_FOUND,
  BT_CS_PF_WRITE_IN_PROGRESS,
  BT_CS_PF_SEND_COMPLETE,
  BT_CS_PF_DISCONNECT_LOWER_LAYER,
  BT_CS_PF_DISCONNECT_REMOTE_REQUEST,
  BT_CS_PF_DATA_WRITE_ERROR_LINK_TERM,
  BT_CS_PF_DISCONNECT_LOCAL_REQUEST,
  BT_CS_PF_CONNECT_TIMEOUT,
  BT_CS_PF_DISCONNECT_TIMEOUT,
  BT_CS_PF_PING_TIMEOUT,
  BT_CS_PF_GET_INFO_TIMEOUT,
  BT_CS_PF_INVALID_ADDRESS,
  BT_CS_PF_CMD_REJECT_RCVD,
  BT_CS_PF_CONNECT_PENDING,
  BT_CS_PF_CONNECT_REFUSED_INVALID_PSM,
  BT_CS_PF_CONNECT_REFUSED_SECURITY,
  BT_CS_PF_CONNECT_REFUSED_NO_RESOURCES,
  BT_CS_PF_CONFIG_FAIL_INVALID_PARAMETERS,
  BT_CS_PF_CONFIG_FAIL_NO_REASON,
  BT_CS_PF_CONFIG_FAIL_UNKNOWN_OPTIONS,
  BT_CS_PF_GET_INFO_BASE,
  BT_CS_PF_GET_INFO_NOT_SUPPORTED,
  BT_CS_PF_INVALID_PSM,
  BT_CS_PF_INVALID_MTU,
  BT_CS_PF_UNICODE_INVALID_SOURCE,
  BT_CS_PF_UNICODE_SOURCE_EXHAUSTED,
  BT_CS_PF_UNICODE_DESTINATION_EXHAUSTED,


#ifdef FEATURE_BT_EXTPF_AV
  BT_CS_PF_A2DP_ERR_TX_Q_FULL               = BT_CMD_EV_PF_A2DP_BASE,
  BT_CS_PF_SBC_NO_SYNCWORD,
  BT_CS_PF_SBC_NOT_ENOUGH_HEADER_DATA,
  BT_CS_PF_SBC_NOT_ENOUGH_BODY_DATA,
  BT_CS_PF_SBC_NOT_ENOUGH_AUDIO_DATA,
  BT_CS_PF_SBC_CHECKSUM_MISMATCH,
  BT_CS_PF_A2DP_ALREADY_MAX_BITRATE,
  BT_CS_PF_A2DP_ALREADY_MIN_BITRATE,
  BT_CS_PF_A2DP_ERR_INCOMPATIABLE_DEVICES,
  BT_CS_PF_A2DP_ERR_ENDPOINT_DISCOVERY,
  BT_CS_PF_A2DP_ERR_FAILED_TO_START_STREAM,
  BT_CS_PF_A2DP_ERR_ATTEMPTED_TO_CLOSE_AND_OPEN_STREAM,
  BT_CS_PF_A2DP_ERR_ABORT_FAILED,
  BT_CS_PF_A2DP_ERR_FAILED_TO_PROCESS_CMD,
  BT_CS_PF_A2DP_ERR_SET_CONFIG_FAILED,
  BT_CS_PF_A2DP_NORMAL_DISCONNECT,
  BT_CS_PF_A2DP_ERR_A2DP_NONE,

  BT_CS_PF_AVRCP_TOO_MANY_CONNECTIONS       = BT_CMD_EV_PF_AVRCP_BASE, 
  BT_CS_PF_AVRCP_NOT_IMPLEMENTED,               
  BT_CS_PF_AVRCP_REJECTED,                      
  BT_CS_PF_AVRCP_INVALID_RESPONSE,              
  BT_CS_PF_AVRCP_RESPONSE_PACKET_OVERFLOW,      
  BT_CS_PF_AVRCP_RESPONSE_INVALID_PDU,          
  BT_CS_PF_AVRCP_RESPONSE_INVALID_PARAMETER,    
  BT_CS_PF_AVRCP_RESPONSE_PARAMETER_NOT_FOUND,  
  BT_CS_PF_AVRCP_RESPONSE_INTERNAL_ERROR,

  BT_CS_PF_AVDTP_ERR_HEADER_FORMAT          = BT_CMD_EV_PF_AVDTP_BASE,
  BT_CS_PF_AVDTP_CONNECTION_SEQ_ERR,
  BT_CS_PF_AVDTP_ERR_LENGTH                 = 0x11 + BT_CMD_EV_PF_AVDTP_BASE,
  BT_CS_PF_AVDTP_ERR_ACP_SEID               = 0x12 + BT_CMD_EV_PF_AVDTP_BASE,
  BT_CS_PF_AVDTP_ERR_SEP_IN_USE             = 0x13 + BT_CMD_EV_PF_AVDTP_BASE,
  BT_CS_PF_AVDTP_ERR_SEP_NOT_IN_USE         = 0x14 + BT_CMD_EV_PF_AVDTP_BASE,
  BT_CS_PF_AVDTP_ERR_SERV_CATEGORY          = 0x17 + BT_CMD_EV_PF_AVDTP_BASE,
  BT_CS_PF_AVDTP_ERR_PAYLOAD_FORMAT         = 0x18 + BT_CMD_EV_PF_AVDTP_BASE,
  BT_CS_PF_AVDTP_ERR_UNSUPPORTED_COMMAND    = 0x19 + BT_CMD_EV_PF_AVDTP_BASE,
  BT_CS_PF_AVDTP_ERR_INVALID_CAPABILITIES   = 0x1A + BT_CMD_EV_PF_AVDTP_BASE,
  BT_CS_PF_AVDTP_ERR_RECOVERY_TYPE          = 0x22 + BT_CMD_EV_PF_AVDTP_BASE,
  BT_CS_PF_AVDTP_ERR_MEDIA_TRANSPORT_FORMAT = 0x23 + BT_CMD_EV_PF_AVDTP_BASE,
  BT_CS_PF_AVDTP_ERR_RECOVERY_FORMAT        = 0x25 + BT_CMD_EV_PF_AVDTP_BASE,
  BT_CS_PF_AVDTP_ERR_ROHC_FORMAT            = 0x26 + BT_CMD_EV_PF_AVDTP_BASE,
  BT_CS_PF_AVDTP_ERR_CP_FORMAT              = 0x27 + BT_CMD_EV_PF_AVDTP_BASE,
  BT_CS_PF_AVDTP_ERR_MUX_FORMAT             = 0x28 + BT_CMD_EV_PF_AVDTP_BASE,
  BT_CS_PF_AVDTP_ERR_UNSUPPORTED_CONFIG     = 0x29 + BT_CMD_EV_PF_AVDTP_BASE,
  BT_CS_PF_AVDTP_ERR_STATE                  = 0x31 + BT_CMD_EV_PF_AVDTP_BASE,
/* GAVDP error codes */
  BT_CS_PF_AVDTP_ERR_BAD_SERVICE            = 0x80 + BT_CMD_EV_PF_AVDTP_BASE,
  BT_CS_PF_AVDTP_ERR_INSUFFICIENT_RESOURCE  = 0x81 + BT_CMD_EV_PF_AVDTP_BASE,
#endif /* FEATURE_BT_EXTPF_AV */

#ifdef FEATURE_BT_EXTPF_HID_HOST
//#error code not present
#endif /*  FEATURE_BT_EXTPF_HID_HOST */

#endif /* FEATURE_BT_EXTPF */
  BT_CS_LAST    
} bt_cmd_status_type;


/*-------------------------------------------------------------------------*/
/*  Bluetooth event type enumeration.                                      */
/*-------------------------------------------------------------------------*/

typedef enum
{
  BT_EV_MIN_EVENT =                BT_CMD_EV_MIN,  /*  Must be first.  */
  BT_EV_GN_CMD_DONE =              BT_CMD_EV_GN_BASE,

#ifdef FEATURE_BT_TEST_API
#error code not present
#endif /* FEATURE_BT_TEST_API */

  BT_EV_NA_ENABLED =               BT_CMD_EV_NA_BASE,
  BT_EV_NA_CONNECTED,
  BT_EV_NA_DISCONNECTED,
  BT_EV_NA_DISABLED,

#ifdef FEATURE_BT_AG
  BT_EV_AG_ENABLED =               BT_CMD_EV_AG_BASE,
  BT_EV_AG_CONNECTED,
  BT_EV_AG_CONNECTION_FAILED,
  BT_EV_AG_RING_FAILED,
  BT_EV_AG_BUTTON_PRESSED,
  BT_EV_AG_AUDIO_CONNECTED,
  BT_EV_AG_AUDIO_DISCONNECTED,
  BT_EV_AG_AUDIO_CONNECT_FAILED,
  BT_EV_AG_SPKR_GAIN_REPORT,
  BT_EV_AG_MIC_GAIN_REPORT,
  BT_EV_AG_DISCONNECTED,
  BT_EV_AG_DISABLED,
  BT_EV_AG_SLC_CHANGED,     /* Service Level Connection up/down */
  BT_EV_AG_DEV_PICKUP,      /* HF sent AG ATA                   */
  BT_EV_AG_DEV_HANGUP,      /* HF sent AG AT+CHUP               */
  BT_EV_AG_VR_TOGGLE,       /* HF sent AG AT+BVRA=n             */
  BT_EV_AG_DEV_DIAL,        /* HF sent AG ATDnnn;               */
  BT_EV_AG_DEV_MEM_DIAL,    /* HF sent AG ATD>nnn;              */
  BT_EV_AG_DEV_REDIAL,      /* HF sent AG AT+BLDN               */
  BT_EV_AG_DEV_SEND_DTMF,   /* HF sent AG AT+VTS=c              */
  BT_EV_AG_BTRH_RCVD,       /* HF sent AG AT+BTRH               */
#ifdef BT_AG_HF_EXTENSION
  BT_EV_AG_PAP_CPBS,        /* HF sent AG AT+CPBS               */
  BT_EV_AG_PAP_CPBR,        /* HF sent AG AT+CPBR               */
  BT_EV_AG_PAP_CPBF,        /* HF sent AG AT+CPBF               */
  BT_EV_AG_PAP_CPBW,        /* HF sent AG AT+CPBW               */
  BT_EV_AG_PAP_CNUM,        /* HF sent AG AT+CNUM               */
  BT_EV_AG_PAP_BTRH = BT_EV_AG_BTRH_RCVD,
#endif /* BT_AG_HF_EXTENSION */
#endif /* FEATURE_BT_AG */

  BT_EV_BA_BOND_DEVICE_RESP =      BT_CMD_EV_BA_BASE,
  BT_EV_BA_UNBOND_DEVICE_RESP,
  BT_EV_BA_PASS_KEY_REQUEST,

  BT_EV_SD_DEVICE_DISCOVERY_RESP = BT_CMD_EV_SD_BASE,
  BT_EV_SD_DEVICE_DISCOVERY_COMPLETE,
  BT_EV_SD_DEVICE_NAME_RESP,
  BT_EV_SD_SERVICE_SEARCH_RESP,
  BT_EV_SD_TIMEOUT_RESP,
  BT_EV_SD_ERROR_RESP,
  BT_EV_SD_SERVER_CHANNEL_NUMBER_RESP,
  BT_EV_SD_SECONDARY_SERVER_CHANNEL_NUMBER_RESP,
  BT_EV_SD_DISCOVERABLE_MODE_RESP,
  BT_EV_SD_CANCEL_IDLE_TIMER_RESP,
  BT_EV_SD_SERVICE_SEARCH_XML_RESP,
#ifdef FEATURE_BT_TEST_API
#error code not present
#endif /* FEATURE_BT_TEST_API */
  
  BT_EV_SPP_FLUSH_TX =             BT_CMD_EV_SP_BASE,
  BT_EV_SPP_ENABLE_DTR,
  BT_EV_SPP_TX_HI_WM,
  BT_EV_SPP_TX_LO_WM,
  BT_EV_SPP_TX_GNE,
  BT_EV_SPP_TX_EMPTY,
  BT_EV_SPP_RX_HI_WM,
  BT_EV_SPP_RX_LO_WM,
  BT_EV_SPP_RX_GNE,
  BT_EV_SPP_RX_EMPTY,
  BT_EV_SPP_LINE_ERROR,
  BT_EV_SPP_MODEM_STATUS,
  BT_EV_SPP_CONFIG_CHANGE,
  BT_EV_SPP_STATUS_CHANGE,

  BT_EV_RC_CONNECTED =             BT_CMD_EV_RC_BASE,
  BT_EV_RC_CONNECTION_FAILED,
  BT_EV_RC_MS_CHANGED,
  BT_EV_RC_RECONFIGURED,
  BT_EV_RC_LINE_ERROR,
  BT_EV_RC_PING_RESULT,
  BT_EV_RC_DISCONNECTED,
  BT_EV_RC_UNREGISTERED,
#ifdef FEATURE_BT_TEST_API
#error code not present
#endif /* FEATURE_BT_TEST_API */

  BT_EV_L2_CONNECTED =             BT_CMD_EV_L2_BASE,
  BT_EV_L2_CONNECTION_FAILED,
  BT_EV_L2_RX_DATA,
  BT_EV_L2_RECONFIGURED,
  BT_EV_L2_PING,
  BT_EV_L2_DISCONNECTED,
  BT_EV_L2_TX_DATA_CFM,

  BT_EV_RM_INQUIRY_RESULT =        BT_CMD_EV_RM_BASE,
  BT_EV_RM_INQUIRY_COMPLETE,
  BT_EV_RM_REMOTE_NAME,
  BT_EV_RM_CONNECT_REQ_ACL,
  BT_EV_RM_CONNECTED_ACL,
  BT_EV_RM_CONNECTION_FAILED_ACL,
  BT_EV_RM_RX_DATA_ACL,
  BT_EV_RM_DISCONNECTED_ACL,
  BT_EV_RM_CONNECT_REQ_SCO,
  BT_EV_RM_CONNECTED_SCO,
  BT_EV_RM_CONNECTION_FAILED_SCO,
  BT_EV_RM_RX_DATA_SCO,
  BT_EV_RM_DISCONNECTED_SCO,
  BT_EV_RM_BONDED,
  BT_EV_RM_BOND_FAILED,
  BT_EV_RM_PIN_REQUEST,
  BT_EV_RM_DEVICE_UPDATED,
  BT_EV_RM_LINK_STATUS,
  BT_EV_RM_AUTHORIZE_REQUEST,
  BT_EV_RM_RFCOMM_SCN_SEC_RESULT,
  BT_EV_RM_L2CAP_PSM_SEC_RESULT,
  BT_EV_RM_SERVICE_SEC_RESULT,
  BT_EV_RM_RADIO_DISABLED,
  BT_EV_RM_AFH_CH_MAP_SET,
  BT_EV_RM_AFH_CH_MAP,
  BT_EV_RM_RADIO_ACTIVITY,
  BT_EV_RM_TX_DATA_CFM,
  BT_EV_RM_KEYPRESS_NOTIFICATION,
  BT_EV_RM_OOB_LOCAL_DATA,
  BT_EV_RM_OOB_REMOTE_DATA_REQUEST,
  BT_EV_RM_PASSKEY_NOTIFICATION,
  BT_EV_RM_PASSKEY_REQUEST,
  BT_EV_RM_USER_CONFIRMATION_REQUEST,
  BT_EV_RM_REBOND_REQUEST,
#ifdef FEATURE_BT_TEST_API
#error code not present
#endif
#ifdef FEATURE_BT_TEST_API
#error code not present
#endif /* FEATURE_BT_TEST_API */

  BT_EV_HC_RX_ACL_DATA =           BT_CMD_EV_HC_BASE,
  BT_EV_HC_RX_SCO_DATA,
  BT_EV_HC_INQUIRY_COMPLETE,
  BT_EV_HC_INQUIRY_RESULT,
  BT_EV_HC_CONNECTION_COMPLETE,
  BT_EV_HC_CONNECTION_FAILED,
  BT_EV_HC_CONNECTION_REQUEST,
  BT_EV_HC_DISCONNECTION_COMPLETE,
  BT_EV_HC_AUTH_COMPLETE,
  BT_EV_HC_REMOTE_NAME_REQ_COMPLETE,
  BT_EV_HC_ENCRYPTION_CHANGE,
  BT_EV_HC_CHANGE_CONN_KEY_COMPLETE,
  BT_EV_HC_MASTER_LINK_KEY_COMPLETE,
  BT_EV_HC_RD_REMOTE_FEATURES_COMPLETE,
  BT_EV_HC_RD_REMOTE_VERSION_COMPLETE,
  BT_EV_HC_QOS_SETUP_COMPLETE,
  BT_EV_HC_COMMAND_COMPLETE,
  BT_EV_HC_COMMAND_STATUS,
  BT_EV_HC_HARDWARE_ERROR,
  BT_EV_HC_FLUSH_OCCURRED,
  BT_EV_HC_ROLE_CHANGE,
  BT_EV_HC_NUM_CMPLT_PKTS,
  BT_EV_HC_MODE_CHANGE,
  BT_EV_HC_RETURN_LINK_KEYS,
  BT_EV_HC_PIN_CODE_REQUEST,
  BT_EV_HC_LINK_KEY_REQUEST,
  BT_EV_HC_LINK_KEY_NOTIFICATION,
  BT_EV_HC_LOOPBACK_COMMAND,
  BT_EV_HC_DATA_BUFFER_OVERFLOW,
  BT_EV_HC_MAX_SLOTS_CHANGE,
  BT_EV_HC_RD_CLK_OFFSET_COMPLETE,
  BT_EV_HC_CONN_PKT_TYPE_CHANGED,
  BT_EV_HC_QOS_VIOLATION,
  BT_EV_HC_PAGE_SCAN_MODE_CHANGE,
  BT_EV_HC_PAGE_SCAN_REP_MODE_CHANGE,
  BT_EV_HC_VENDOR_SPECIFIC,
  BT_EV_HC_SYNC_CONN_COMPLETE,
  BT_EV_HC_SYNC_CONN_CHANGE,
  BT_EV_HC_RD_REMOTE_EXT_FEATURES_COMPLETE,
  BT_EV_HC_TX_DATA_CFM,
  BT_EV_HC_RADIO_ACTIVITY_CHANGED,
  BT_EV_HC_CUR_CONN_ENCRYPT,
  BT_EV_HC_ENCRYPTION_KEY_REFRESH_COMPLETE,
  BT_EV_HC_IO_CAPABILITY_REQUEST,
  BT_EV_HC_IO_CAPABILITY_RESPONSE,
  BT_EV_HC_USER_CONFIRMATION_REQUEST,
  BT_EV_HC_USER_PASSKEY_REQUEST,
  BT_EV_HC_REMOTE_OOB_DATA_REQUEST,
  BT_EV_HC_SIMPLE_PAIRING_COMPLETE,
  BT_EV_HC_USER_PASSKEY_NOTIFICATION,
  BT_EV_HC_KEYPRESS_NOTIFICATION,
  BT_EV_HC_REMOTE_HOST_SUPPORTED_FEAT_NTFCTN,
  BT_EV_HC_INQUIRY_RESULT_WITH_RSSI,
  BT_EV_HC_INQUIRY_RESULT_EXTENDED,
  BT_EV_HC_ENH_FLUSH_COMPLETE,
  BT_EV_HC_SNIFF_SUBRATING,
  BT_EV_HC_LINK_SUPERVISION_TIMEOUT_CHANGED,
  BT_EV_HC_MAX = ( BT_CMD_EV_HC_BASE + 0xFF ),

#ifdef FEATURE_BT_EXTPF
#ifdef FEATURE_BT_EXTPF_GOEP
  BT_EV_PF_GOEP_CLI_CON_CFM =      BT_CMD_EV_PF_GOEP_BASE,
  BT_EV_PF_GOEP_CLI_DCN_IND,     
  BT_EV_PF_GOEP_CLI_PUT_CFM,
  BT_EV_PF_GOEP_CLI_GET_RCV_DATA,
  BT_EV_PF_GOEP_CLI_SET_PATH_CFM,
  BT_EV_PF_GOEP_CLI_AUTH_IND,
  BT_EV_PF_GOEP_CLI_AUTH_RESP_IND,
           
  BT_EV_PF_GOEP_SRV_CON_IND,
  BT_EV_PF_GOEP_SRV_AUTH_IND,
  BT_EV_PF_GOEP_SRV_DCN_IND,
  BT_EV_PF_GOEP_SRV_GET_IND,
  BT_EV_PF_GOEP_SRV_PUT_IND,
  BT_EV_PF_GOEP_SRV_SET_PATH_IND,
#endif /* FEATURE_BT_EXTPF_GOEP */

#ifdef FEATURE_BT_EXTPF_OPP
  BT_EV_PF_OPP_CLI_CON_CFM =       BT_CMD_EV_PF_OPP_BASE,
  BT_EV_PF_OPP_CLI_CON_PROG_IND,
  BT_EV_PF_OPP_CLI_DCN_CFM,
  BT_EV_PF_OPP_CLI_PSH_DNE,
  BT_EV_PF_OPP_CLI_PUL_DNE,                                  
  BT_EV_PF_OPP_CLI_OPEN_READ_REQ,
  BT_EV_PF_OPP_CLI_OPEN_WRITE_REQ,
  BT_EV_PF_OPP_CLI_CLOSE_REQ,
  BT_EV_PF_OPP_CLI_READ_REQ,
  BT_EV_PF_OPP_CLI_WRITE_REQ,
       
  BT_EV_PF_OPP_SRV_CON_IND,
  BT_EV_PF_OPP_SRV_DCN_IND,
  BT_EV_PF_OPP_SRV_OPEN_READ_REQ,
  BT_EV_PF_OPP_SRV_OPEN_WRITE_REQ,
  BT_EV_PF_OPP_SRV_CLOSE_REQ,
  BT_EV_PF_OPP_SRV_READ_REQ,
  BT_EV_PF_OPP_SRV_WRITE_REQ,
#endif /* FEATURE_BT_EXTPF_OPP */

#ifdef FEATURE_BT_EXTPF_FTP
  BT_EV_PF_FTP_CLI_CON_CFM =       BT_CMD_EV_PF_FTP_BASE,
  BT_EV_PF_FTP_CLI_CON_READ_ONLY_CFM,
  BT_EV_PF_FTP_CLI_DCN_CFM,
  BT_EV_PF_FTP_CLI_AUTH_REQ,
  BT_EV_PF_FTP_CLI_PUT_DNE,
  BT_EV_PF_FTP_CLI_DELETE_DNE,
  BT_EV_PF_FTP_CLI_GET_RSP,
  BT_EV_PF_FTP_CLI_SET_PATH_DNE,
  BT_EV_PF_FTP_CLI_NEW_SUBFOLDER_DNE,
  BT_EV_PF_FTP_CLI_GET_FOLDER_LIST_RSP,
  BT_EV_PF_FTP_CLI_TREE_PUT_DNE,
  BT_EV_PF_FTP_CLI_TREE_GET_RSP,
  BT_EV_PF_FTP_CLI_BROWSE_REQ,
  BT_EV_PF_FTP_CLI_OPEN_REQ,
  BT_EV_PF_FTP_CLI_CLOSE_REQ,
  BT_EV_PF_FTP_CLI_READ_REQ,
  BT_EV_PF_FTP_CLI_WRITE_REQ,
  BT_EV_PF_FTP_CLI_SET_FOLDER_REQ,

  BT_EV_PF_FTP_SRV_CON_IND,
  BT_EV_PF_FTP_SRV_DCN_IND,
  BT_EV_PF_FTP_SRV_BROWSE_REQ,
  BT_EV_PF_FTP_SRV_OPEN_REQ,
  BT_EV_PF_FTP_SRV_CLOSE_REQ,
  BT_EV_PF_FTP_SRV_READ_REQ,
  BT_EV_PF_FTP_SRV_WRITE_REQ,
  BT_EV_PF_FTP_SRV_DELETE_REQ,
  BT_EV_PF_FTP_SRV_SET_FOLDER_REQ,
#endif /* FEATURE_BT_EXTPF_FTP */

#ifdef FEATURE_BT_EXTPF_BIP
  BT_EV_PF_BIP_CLI_CON_CFM =       BT_CMD_EV_PF_BIP_BASE,
  BT_EV_PF_BIP_CLI_DCN_CFM,
  BT_EV_PF_BIP_CLI_AUTH_REQ,
  BT_EV_PF_BIP_CLI_GET_CAPABILITIES_CFM,
  BT_EV_PF_BIP_CLI_PUT_IMAGE_CFM,
  BT_EV_PF_BIP_CLI_PUT_LINKED_THUMBNAIL_CFM,
  BT_EV_PF_BIP_CLI_PUT_LINKED_ATTACHMENT_CFM,
  BT_EV_PF_BIP_CLI_GET_IMAGES_LIST_CFM,
  BT_EV_PF_BIP_CLI_GET_IMAGE_PROPERTIES_CFM,
  BT_EV_PF_BIP_CLI_GET_IMAGE_CFM,        
  BT_EV_PF_BIP_CLI_GET_LINKED_THUMBNAIL_CFM,
  BT_EV_PF_BIP_CLI_GET_LINKED_ATTACHMENT_CFM,
  BT_EV_PF_BIP_CLI_DELETE_IMAGE_CFM,      
  BT_EV_PF_BIP_CLI_GET_STATUS_CFM,           
  BT_EV_PF_BIP_CLI_GET_PARTIAL_IMAGE_CFM,
  BT_EV_PF_BIP_CLI_START_PRINT_CFM,           
  BT_EV_PF_BIP_CLI_START_ARCHIVE_CFM,   
  BT_EV_PF_BIP_CLI_REMOTE_DISPLAY_CFM,
  BT_EV_PF_BIP_CLI_GET_MONITORING_IMAGE_CFM,
     
  BT_EV_PF_BIP_SRV_CON_IND,
  BT_EV_PF_BIP_SRV_DCN_IND,
  BT_EV_PF_BIP_SRV_AUTH_IND,
  BT_EV_PF_BIP_SRV_GET_CAPABILITIES_IND,
  BT_EV_PF_BIP_SRV_PUT_IMAGE_IND,
  BT_EV_PF_BIP_SRV_PUT_LINKED_THUMBNAIL_IND,
  BT_EV_PF_BIP_SRV_PUT_LINKED_ATTACHMENT_IND,
  BT_EV_PF_BIP_SRV_GET_IMAGES_LIST_IND,
  BT_EV_PF_BIP_SRV_GET_IMAGE_PROPERTIES_IND,
  BT_EV_PF_BIP_SRV_GET_IMAGE_IND,        
  BT_EV_PF_BIP_SRV_GET_LINKED_THUMBNAIL_IND,
  BT_EV_PF_BIP_SRV_GET_LINKED_ATTACHMENT_IND, 
  BT_EV_PF_BIP_SRV_DELETE_IMAGE_IND,     
  BT_EV_PF_BIP_SRV_GET_STATUS_IND,           
  BT_EV_PF_BIP_SRV_GET_PARTIAL_IMAGE_IND,           
  BT_EV_PF_BIP_SRV_START_ARCHIVE_IND,   
  BT_EV_PF_BIP_SRV_REMOTE_DISPLAY_IND,
  BT_EV_PF_BIP_SRV_GET_MONITORING_IMAGE_IND,
#ifdef FEATURE_BT_TEST_API
#error code not present
#endif /* FEATURE_BT_TEST_API */
#endif /* FEATURE_BT_EXTPF_BIP */

#ifdef FEATURE_BT_EXTPF_BPP
  BT_EV_PF_BPP_SNDR_CON_CFM =       BT_CMD_EV_PF_BPP_BASE,
  BT_EV_PF_BPP_SNDR_CON_IND,
  BT_EV_PF_BPP_SNDR_DCN_IND,
  BT_EV_PF_BPP_SNDR_SRV_DCN_IND,
  BT_EV_PF_BPP_SNDR_AUTH_REQ,
  BT_EV_PF_BPP_SNDR_SEND_FILE_CFM,
  BT_EV_PF_BPP_SNDR_SEND_REFERENCE_CFM,
  BT_EV_PF_BPP_SNDR_GET_CFM,
  BT_EV_PF_BPP_SNDR_GET_REF_OBJ_IND,
#endif /* FEATURE_BT_EXTPF_BPP */

#ifdef FEATURE_BT_EXTPF_SML
  BT_EV_PF_SML_CLI_CON_IND =        BT_CMD_EV_PF_SML_BASE,
  BT_EV_PF_SML_CLI_DCN_IND,
  BT_EV_PF_SML_CLI_GET_IND,
  BT_EV_PF_SML_CLI_PUT_IND,
  BT_EV_PF_SML_SRV_CON_IND,
  BT_EV_PF_SML_SRV_DCN_IND,
  BT_EV_PF_SML_SRV_GET_IND,
  BT_EV_PF_SML_SRV_PUT_IND,
  BT_EV_PF_SML_CON_CFM,
  BT_EV_PF_SML_DCN_CFM,
  BT_EV_PF_SML_AUTH_IND,
  BT_EV_PF_SML_GET_RCV_DATA,
  BT_EV_PF_SML_PUT_CFM,
#ifdef FEATURE_BT_TEST_API
#error code not present
#endif /* FEATURE_BT_TEST_API */
#endif /* FEATURE_BT_EXTPF_SML */

#ifdef FEATURE_BT_EXTPF_CTP
  BT_EV_PF_CTP_CON_IND          =   BT_CMD_EV_PF_CTP_BASE,
  BT_EV_PF_CTP_CON_CFM,
  BT_EV_PF_CTP_DCN_CFM,
  BT_EV_PF_CTP_EST_IND,
  BT_EV_PF_CTP_EST_CFM,
  BT_EV_PF_CTP_INFO_IND,
  BT_EV_PF_CTP_DTMF_START,
  BT_EV_PF_CTP_DTMF_STOP,
  BT_EV_PF_CTP_REL_IND,
  BT_EV_PF_CTP_OUT_STATUS,
  BT_EV_PF_CTP_CALL_DATA_IND,

  /* ICP events */
  BT_EV_PF_ICP_CON_IND,
  BT_EV_PF_ICP_CON_CFM,
  BT_EV_PF_ICP_DCN_CFM,
  BT_EV_PF_ICP_EST_IND,
  BT_EV_PF_ICP_EST_CFM,
  BT_EV_PF_ICP_INFO_IND,
  BT_EV_PF_ICP_DTMF_START,
  BT_EV_PF_ICP_DTMF_STOP,
  BT_EV_PF_ICP_REL_IND,
  BT_EV_PF_ICP_OUT_STATUS,
  BT_EV_PF_ICP_CALL_DATA_IND,
#ifdef FEATURE_BT_TEST_API
#error code not present
#endif /* FEATURE_BT_TEST_API */
#endif /* FEATURE_BT_EXTPF_CTP */

  BT_EV_PF_SAP_CON_REQ = BT_CMD_EV_PF_SAP_BASE, /* client -> server */
  BT_EV_PF_SAP_CON_RSP,                         /* server -> client */
  BT_EV_PF_SAP_CON_CFM,                         /* to server app */
  BT_EV_PF_SAP_DCN_IND,                         /* server -> client */
  BT_EV_PF_SAP_DCN_RSP,                         /* to client app */
  BT_EV_PF_SAP_DCN_CFM,                         /* to server app */
  BT_EV_PF_SAP_TX_APDU_REQ,
  BT_EV_PF_SAP_TX_APDU_RSP,
  BT_EV_PF_SAP_TX_ATR_REQ,
  BT_EV_PF_SAP_TX_ATR_RSP,
  BT_EV_PF_SAP_PWR_SIM_OFF_REQ,
  BT_EV_PF_SAP_PWR_SIM_OFF_RSP,
  BT_EV_PF_SAP_PWR_SIM_ON_REQ,
  BT_EV_PF_SAP_PWR_SIM_ON_RSP,
  BT_EV_PF_SAP_RESET_SIM_REQ,
  BT_EV_PF_SAP_RESET_SIM_RSP,
  BT_EV_PF_SAP_CARD_READER_STATUS_REQ,
  BT_EV_PF_SAP_CARD_READER_STATUS_RSP,
  BT_EV_PF_SAP_STATUS_IND,
  BT_EV_PF_SAP_ERROR_RSP,

#ifdef FEATURE_BT_EXTPF_AV  //modi by yangdecai
  /* A2DP Events */
  BT_EV_PF_A2DP_CON        =   BT_CMD_EV_PF_A2DP_BASE,
  BT_EV_PF_A2DP_CON_FAILED,
  BT_EV_PF_A2DP_DISCON,
  BT_EV_PF_A2DP_START,
  BT_EV_PF_A2DP_SUSPEND,
  BT_EV_PF_A2DP_OPEN,
  BT_EV_PF_A2DP_CLOSE,
  BT_EV_PF_A2DP_BITRATE,

  /* AVRCP Events */
  BT_EV_PF_AVRCP_CON       =   BT_CMD_EV_PF_AVRCP_BASE,
  BT_EV_PF_AVRCP_CON_FAILED,
  BT_EV_PF_AVRCP_DISCON,
  BT_EV_PF_AVRCP_TARGET_COMMAND,
  BT_EV_PF_AVRCP_OP_SELECT,
  BT_EV_PF_AVRCP_OP_UP,
  BT_EV_PF_AVRCP_OP_DOWN,
  BT_EV_PF_AVRCP_OP_LEFT,
  BT_EV_PF_AVRCP_OP_RIGHT,
  BT_EV_PF_AVRCP_OP_RIGHT_UP,
  BT_EV_PF_AVRCP_OP_RIGHT_DOWN,
  BT_EV_PF_AVRCP_OP_LEFT_UP,
  BT_EV_PF_AVRCP_OP_LEFT_DOWN,
  BT_EV_PF_AVRCP_OP_ROOT_MENU,
  BT_EV_PF_AVRCP_OP_SETUP_MENU,
  BT_EV_PF_AVRCP_OP_CONTENTS_MENU,
  BT_EV_PF_AVRCP_OP_FAVORITE_MENU,
  BT_EV_PF_AVRCP_OP_EXIT,
  BT_EV_PF_AVRCP_OP_0,
  BT_EV_PF_AVRCP_OP_1,
  BT_EV_PF_AVRCP_OP_2,
  BT_EV_PF_AVRCP_OP_3,
  BT_EV_PF_AVRCP_OP_4,
  BT_EV_PF_AVRCP_OP_5,
  BT_EV_PF_AVRCP_OP_6,
  BT_EV_PF_AVRCP_OP_7,
  BT_EV_PF_AVRCP_OP_8,
  BT_EV_PF_AVRCP_OP_9,
  BT_EV_PF_AVRCP_OP_DOT,
  BT_EV_PF_AVRCP_OP_ENTER,
  BT_EV_PF_AVRCP_OP_CLEAR,
  BT_EV_PF_AVRCP_OP_CHANNEL_UP,
  BT_EV_PF_AVRCP_OP_CHANNEL_DOWN,
  BT_EV_PF_AVRCP_OP_PREVIOUS_CHANNEL,
  BT_EV_PF_AVRCP_OP_SOUND_SELECT,
  BT_EV_PF_AVRCP_OP_INPUT_SELECT,
  BT_EV_PF_AVRCP_OP_DISPLAY_INFORMATION,
  BT_EV_PF_AVRCP_OP_HELP,
  BT_EV_PF_AVRCP_OP_PAGE_UP,
  BT_EV_PF_AVRCP_OP_PAGE_DOWN,
  BT_EV_PF_AVRCP_OP_POWER,
  BT_EV_PF_AVRCP_OP_VOLUME_UP,
  BT_EV_PF_AVRCP_OP_VOLUME_DOWN,
  BT_EV_PF_AVRCP_OP_MUTE,
  BT_EV_PF_AVRCP_OP_PLAY,
  BT_EV_PF_AVRCP_OP_STOP,
  BT_EV_PF_AVRCP_OP_PAUSE,
  BT_EV_PF_AVRCP_OP_RECORD,
  BT_EV_PF_AVRCP_OP_REWIND,
  BT_EV_PF_AVRCP_OP_FAST_FORWARD,
  BT_EV_PF_AVRCP_OP_EJECT,
  BT_EV_PF_AVRCP_OP_FORWARD,
  BT_EV_PF_AVRCP_OP_BACKWARD,
  BT_EV_PF_AVRCP_OP_ANGLE,
  BT_EV_PF_AVRCP_OP_SUBPICTURE,
  BT_EV_PF_AVRCP_OP_F1,
  BT_EV_PF_AVRCP_OP_F2,
  BT_EV_PF_AVRCP_OP_F3,
  BT_EV_PF_AVRCP_OP_F4,
  BT_EV_PF_AVRCP_OP_F5,
  BT_EV_PF_AVRCP_OP_GENERIC,

#ifdef FEATURE_BT_AVRCP_13
  /* AVRCP meta data events */
  BT_EV_PF_AVRCP_CAPABILITY_COMMAND_IND,
  BT_EV_PF_AVRCP_LIST_ATTRIBUTES_COMMAND_IND,
  BT_EV_PF_AVRCP_LIST_ATTRIBUTE_VALUES_COMMAND_IND,
  BT_EV_PF_AVRCP_GET_ATTRIBUTE_VALUES_COMMAND_IND,
  BT_EV_PF_AVRCP_SET_ATTRIBUTE_VALUES_COMMAND_IND,
  BT_EV_PF_AVRCP_GET_ATTRIBUTE_SETTING_TEXT_COMMAND_IND,
  BT_EV_PF_AVRCP_GET_ATTRIBUTE_SETTING_VALUE_TEXT_COMMAND_IND,
  BT_EV_PF_AVRCP_INFORM_CHARACTER_SET_COMMAND_IND,
  BT_EV_PF_AVRCP_INFORM_BATTERY_STATUS_OF_CT_COMMAND_IND,
  BT_EV_PF_AVRCP_GET_ELEMENT_ATTRIBUTE_COMMAND_IND,
  BT_EV_PF_AVRCP_GET_PLAY_STATUS_COMMAND_IND,
  BT_EV_PF_AVRCP_EVENT_NOTIFICATION_COMMAND_IND,
  BT_EV_PF_AVRCP_CONTINUE_RESPONSE_COMMAND_IND,
  BT_EV_PF_AVRCP_ABORT_RESPONSE_COMMAND_IND,
  BT_EV_PF_AVRCP_GROUP_NAVIGATION_COMMAND_IND,
#endif /* FEATURE_BT_AVRCP_13 */

  /* AVDTP events are used internally by the driver */
  BT_EV_PF_AVDTP_CON_IND = BT_CMD_EV_PF_AVDTP_BASE,
  BT_EV_PF_AVDTP_CON_CFM,
  BT_EV_PF_AVDTP_DISCON_IND,
  BT_EV_PF_AVDTP_DISC_CFM,
  BT_EV_PF_AVDTP_GET_CAP_CFM,
  BT_EV_PF_AVDTP_SET_CFG_IND,
  BT_EV_PF_AVDTP_SET_CFG_CFM,
  BT_EV_PF_AVDTP_GET_CFG_CFM,
  BT_EV_PF_AVDTP_OPEN_CFM,
  BT_EV_PF_AVDTP_OPEN_IND,
  BT_EV_PF_AVDTP_CLOSE_IND,
  BT_EV_PF_AVDTP_CLOSE_CFM,
  BT_EV_PF_AVDTP_START_IND,
  BT_EV_PF_AVDTP_START_CFM,
  BT_EV_PF_AVDTP_SUSPEND_IND,
  BT_EV_PF_AVDTP_SUSPEND_CFM,
  BT_EV_PF_AVDTP_RECFG_IND,
  BT_EV_PF_AVDTP_RECFG_CFM,
  BT_EV_PF_AVDTP_ABORT_IND,
  BT_EV_PF_AVDTP_ABORT_CFM,
  BT_EV_PF_AVDTP_SEC_IND,
  BT_EV_PF_AVDTP_SEC_CFM,
  BT_EV_PF_AVDTP_RECV_DATA,
  BT_EV_PF_AVDTP_SEND_CFM,
#endif /* FEATURE_BT_EXTPF_AV */

#ifdef FEATURE_BT_EXTPF_PBAP
  BT_EV_PF_PBAP_CLI_CON_CFM =       BT_CMD_EV_PF_PBAP_BASE,
  BT_EV_PF_PBAP_CLI_DCN_CFM,
  BT_EV_PF_PBAP_CLI_AUTH_REQ,
  BT_EV_PF_PBAP_CLI_PULL_PHONE_BOOK_CFM,
  BT_EV_PF_PBAP_CLI_SET_PHONE_BOOK_CFM,
  BT_EV_PF_PBAP_CLI_PULL_VCARD_LISTING_CFM,
  BT_EV_PF_PBAP_CLI_PULL_VCARD_ENTRY_CFM,
     
  BT_EV_PF_PBAP_SRV_CON_IND,
  BT_EV_PF_PBAP_SRV_DCN_IND,
  BT_EV_PF_PBAP_SRV_AUTH_IND,
  BT_EV_PF_PBAP_SRV_PULL_PHONE_BOOK_IND,
  BT_EV_PF_PBAP_SRV_SET_PHONE_BOOK_IND,
  BT_EV_PF_PBAP_SRV_PULL_VCARD_LISTING_IND,
  BT_EV_PF_PBAP_SRV_PULL_VCARD_ENTRY_IND,
#endif /* FEATURE_BT_EXTPF_PBAP */

#ifdef FEATURE_BT_EXTPF_HID_HOST
#error code not present
#endif /* FEATURE_BT_EXTPF_HID_HOST */

#endif /* FEATURE_BT_EXTPF */

  BT_EV_MAX_EVENT,  /*  Must be after last valid event.  */
  BT_EV_NULL =                     BT_CMD_EV_NULL
} bt_event_type;

//#endif /* FEATURE_BT */  //modi by yangdecai
#endif /* _BTCOMDEF_H */

